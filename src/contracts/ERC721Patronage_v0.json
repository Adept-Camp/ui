{
  "contractName": "ERC721Patronage_v0",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "steward",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_steward",
          "type": "address"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "setup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_steward\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"steward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"initialize()\":{\"details\":\"Constructor function.\"},\"initialize(string,string)\":{\"details\":\"Constructor function\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mintWithTokenURI(address,uint256,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/jasoons/Documents/clean-code/contracts/contracts/ERC721Patronage_v0.sol\":\"ERC721Patronage_v0\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jasoons/Documents/clean-code/contracts/contracts/ERC721Patronage_v0.sol\":{\"keccak256\":\"0xf1ea08639170f86bf246288d87226dd2e1d8c4fe9ad03265454ea7624ebe781d\",\"urls\":[\"bzzr://0e368ebf9437eba125c8a4a6a546c31d3432979ac1e6d03af88248523011554e\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzzr://47885dccac32ee543284e93f21a5f62c499076b04d01b12ff67aefffbbdcbd34\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzzr://6512de0b01d48e4b64c272c8a6e29787242f218a284becfde257ed7c650fc64d\"]},\"@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzzr://ecd0352164978c418c8f5b0080c972b65e4b07f6afc593fb7cdd856185a458ea\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x6ea411702cfde6628ac0c33d23f3a507550500aa52bbb5a38c599826a13969f8\",\"urls\":[\"bzzr://52b7668fc29b0ad2228ce35ed2349a3d36d0760e5f65562fec82ebab17013f46\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x661553e43d7c4fbb2de504e5999fd5c104d367488350ed5bf023031bd1ba5ac5\",\"urls\":[\"bzzr://fc2ba15143ce3a00268ecd15fc98eb2469b18bfe27a64bbab0ac6446f161c739\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xbb4253663780c31f8fbfd75f7bac70fbbe986b5f886ca53b5f37e60165f2b27b\",\"urls\":[\"bzzr://30b5bb3c00c17d76b55d77cdbeef2f4f4feda31908fc902097aadf7be020297e\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0xef72c4af661f02b374f79820528cbf5e75a0252f2736b1d8155e23e3cf4772e4\",\"urls\":[\"bzzr://18ccb2e33af47de342df40e2781a67e4aeccfe0a55f688e345b0a6009bb4fa38\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x05716424b99aa883c7dd4eb4c32cd75a19c9fdfddaede038dd5fb1da2377e21e\",\"urls\":[\"bzzr://3f1491d3de213673473899328f3b988c4141d7efea243f2f2cdd738cb2fa3047\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol\":{\"keccak256\":\"0x1a4a7d5e495009d435ece44f0bd2af5cb978f40fd3f569abd095c674dbaa6da9\",\"urls\":[\"bzzr://ba10e3c018035d476aea48bc170fa28de9bd6aecd3e36a26021fb392b5064ed3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x1be97dad12c252fece6e406ac160da84895cf049e6f24980dfd48f4c4c26bbc2\",\"urls\":[\"bzzr://019bc06a65d1e3b71f608476682d8256e69cf9234f04fe7565927487082e7911\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x6a3efb9d8c3c6467f308592675407fceae553543d90c287d4f7370b7c2638774\",\"urls\":[\"bzzr://0c3dab23fb4875a139fde6842ce065cdbe119d39f94f13c62e9084bb963810a2\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xf83b0e3cfc9d22e6ab413d8881a7e55384a9ebfd1d78ab8b9ce4f0cb6ee2fcf8\",\"urls\":[\"bzzr://714fbee5db613aabd8a8af2dcb099770bfa7057b989d6fcc962cdaeaecc68208\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzzr://2466b6491600969dd9ffdeb0b705e7cecc38418aa215cec64b2481273bba9076\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzzr://f7f6da60a184233fd666ac44e6fb2bd51ca6ebdc4867a310d368049aa4e62786\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]}},\"version\":1}",
  "bytecode": "0x60806040526125e6806100136000396000f3fe608060405234801561001057600080fd5b5060043610610190576000357c0100000000000000000000000000000000000000000000000000000000900480636352211e116100fb57806398650275116100b4578063b88d4fde1161008e578063b88d4fde14610790578063c4d66de814610856578063c87b56dd1461087c578063e985e9c51461089957610190565b80639865027514610734578063a22cb4651461073c578063aa271e1a1461076a57610190565b80636352211e146106b3578063637eea19146106d057806370a08231146106d85780638129fc1c146106fe57806395d89b4114610706578063983b2d561461070e57610190565b80632f745c591161014d5780632f745c59146103045780633aaac28e1461033057806342842e0e146104785780634cd88b76146104ae5780634f6ccce7146105db57806350bb4e7f146105f857610190565b806301ffc9a71461019557806306fdde03146101d0578063081812fc1461024d578063095ea7b31461028657806318160ddd146102b457806323b872dd146102ce575b600080fd5b6101bc600480360360208110156101ab57600080fd5b5035600160e060020a0319166108c7565b604080519115158252519081900360200190f35b6101d86108e6565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102125781810151838201526020016101fa565b50505050905090810190601f16801561023f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61026a6004803603602081101561026357600080fd5b503561097d565b60408051600160a060020a039092168252519081900360200190f35b6102b26004803603604081101561029c57600080fd5b50600160a060020a0381351690602001356109e4565b005b6102bc610b1b565b60408051918252519081900360200190f35b6102b2600480360360608110156102e457600080fd5b50600160a060020a03813581169160208101359091169060400135610b21565b6102bc6004803603604081101561031a57600080fd5b50600160a060020a038135169060200135610b82565b6102b26004803603608081101561034657600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561037157600080fd5b82018360208201111561038357600080fd5b803590602001918460018302840111640100000000831117156103a557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156103f857600080fd5b82018360208201111561040a57600080fd5b8035906020019184600183028401116401000000008311171561042c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050509035600160a060020a03169150610c049050565b6102b26004803603606081101561048e57600080fd5b50600160a060020a03813581169160208101359091169060400135610d0d565b6102b2600480360360408110156104c457600080fd5b8101906020810181356401000000008111156104df57600080fd5b8201836020820111156104f157600080fd5b8035906020019184600183028401116401000000008311171561051357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561056657600080fd5b82018360208201111561057857600080fd5b8035906020019184600183028401116401000000008311171561059a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d29945050505050565b6102bc600480360360208110156105f157600080fd5b5035610e35565b6101bc6004803603606081101561060e57600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561063e57600080fd5b82018360208201111561065057600080fd5b8035906020019184600183028401116401000000008311171561067257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e9f945050505050565b61026a600480360360208110156106c957600080fd5b5035610f0f565b61026a610f6e565b6102bc600480360360208110156106ee57600080fd5b5035600160a060020a0316610f7e565b6102b2610feb565b6101d86110ce565b6102b26004803603602081101561072457600080fd5b5035600160a060020a031661112f565b6102b2611183565b6102b26004803603604081101561075257600080fd5b50600160a060020a0381351690602001351515611195565b6101bc6004803603602081101561078057600080fd5b5035600160a060020a0316611297565b6102b2600480360360808110156107a657600080fd5b600160a060020a038235811692602081013590911691604082013591908101906080810160608201356401000000008111156107e157600080fd5b8201836020820111156107f357600080fd5b8035906020019184600183028401116401000000008311171561081557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506112ab945050505050565b6102b26004803603602081101561086c57600080fd5b5035600160a060020a0316611308565b6101d86004803603602081101561089257600080fd5b50356113df565b6101bc600480360360408110156108af57600080fd5b50600160a060020a03813581169160200135166114c9565b600160e060020a03191660009081526033602052604090205460ff1690565b60d28054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109725780601f1061094757610100808354040283529160200191610972565b820191906000526020600020905b81548152906001019060200180831161095557829003601f168201915b505050505090505b90565b6000610988826114f7565b15156109c85760405160e560020a62461bcd02815260040180806020018281038252602c81526020018061243d602c913960400191505060405180910390fd5b50600090815260676020526040902054600160a060020a031690565b60006109ef82610f0f565b9050600160a060020a038381169082161415610a3f5760405160e560020a62461bcd02815260040180806020018281038252602181526020018061253d6021913960400191505060405180910390fd5b80600160a060020a0316610a51611514565b600160a060020a03161480610a725750610a7281610a6d611514565b6114c9565b1515610ab25760405160e560020a62461bcd0281526004018080602001828103825260388152602001806123616038913960400191505060405180910390fd5b600082815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b609e5490565b610b32610b2c611514565b82611518565b1515610b725760405160e560020a62461bcd02815260040180806020018281038252603181526020018061255e6031913960400191505060405180910390fd5b610b7d838383611544565b505050565b6000610b8d83610f7e565b8210610bcd5760405160e560020a62461bcd02815260040180806020018281038252602b8152602001806122b4602b913960400191505060405180910390fd5b600160a060020a0383166000908152609c60205260409020805483908110610bf157fe5b9060005260206000200154905092915050565b600054610100900460ff1680610c1d5750610c1d611563565b80610c2b575060005460ff16155b1515610c6b5760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff16158015610c96576000805460ff1961ff0019909116610100171660011790555b61016c805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038716179055610cc7611569565b610ccf610feb565b610cd98484610d29565b610ce230611308565b610ceb3061162c565b610cf482611675565b8015610d06576000805461ff00191690555b5050505050565b610b7d83838360206040519081016040528060008152506112ab565b600054610100900460ff1680610d425750610d42611563565b80610d50575060005460ff16155b1515610d905760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff16158015610dbb576000805460ff1961ff0019909116610100171660011790555b610dc36116be565b1515610dce57600080fd5b8251610de19060d29060208601906121fb565b508151610df59060d39060208501906121fb565b50610e1f7f5b5e139f000000000000000000000000000000000000000000000000000000006116ee565b8015610b7d576000805461ff0019169055505050565b6000610e3f610b1b565b8210610e7f5760405160e560020a62461bcd02815260040180806020018281038252602c81526020018061258f602c913960400191505060405180910390fd5b609e805483908110610e8d57fe5b90600052602060002001549050919050565b6000610eb1610eac611514565b611297565b1515610ef15760405160e560020a62461bcd0281526004018080602001828103825260308152602001806123ec6030913960400191505060405180910390fd5b610efb8484611775565b610f058383611792565b5060019392505050565b600081815260666020526040812054600160a060020a0316801515610f685760405160e560020a62461bcd0281526004018080602001828103825260298152602001806123c36029913960400191505060405180910390fd5b92915050565b61016c54600160a060020a031681565b6000600160a060020a0382161515610fca5760405160e560020a62461bcd02815260040180806020018281038252602a815260200180612399602a913960400191505060405180910390fd5b600160a060020a0382166000908152606860205260409020610f68906117fa565b600054610100900460ff16806110045750611004611563565b80611012575060005460ff16155b15156110525760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff1615801561107d576000805460ff1961ff0019909116610100171660011790555b6110856116be565b151561109057600080fd5b6110b97f780e9d63000000000000000000000000000000000000000000000000000000006116ee565b80156110cb576000805461ff00191690555b50565b60d38054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109725780601f1061094757610100808354040283529160200191610972565b61113a610eac611514565b151561117a5760405160e560020a62461bcd0281526004018080602001828103825260308152602001806123ec6030913960400191505060405180910390fd5b6110cb81611675565b61119361118e611514565b61162c565b565b61119d611514565b600160a060020a0383811691161415611200576040805160e560020a62461bcd02815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806069600061120d611514565b600160a060020a03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611251611514565b6040805184151581529051600160a060020a0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6000610f686101078363ffffffff6117fe16565b6112b6848484610b21565b6112c28484848461186a565b15156113025760405160e560020a62461bcd0281526004018080602001828103825260328152602001806122df6032913960400191505060405180910390fd5b50505050565b600054610100900460ff16806113215750611321611563565b8061132f575060005460ff16155b151561136f5760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff1615801561139a576000805460ff1961ff0019909116610100171660011790555b6113a26116be565b15156113ad57600080fd5b6113b56119f9565b15156113c057600080fd5b6113c982611a24565b80156113db576000805461ff00191690555b5050565b60606113ea826114f7565b151561142a5760405160e560020a62461bcd02815260040180806020018281038252602f81526020018061250e602f913960400191505060405180910390fd5b600082815260d4602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156114bd5780601f10611492576101008083540402835291602001916114bd565b820191906000526020600020905b8154815290600101906020018083116114a057829003601f168201915b50505050509050919050565b600160a060020a03918216600090815260696020908152604080832093909416825291909152205460ff1690565b600090815260666020526040902054600160a060020a0316151590565b3390565b61016c54600090600160a060020a038481169116148061153d575061153d8383611ace565b9392505050565b61154f838383611b6f565b6115598382611cc8565b610b7d8282611db8565b303b1590565b600054610100900460ff16806115825750611582611563565b80611590575060005460ff16155b15156115d05760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff161580156115fb576000805460ff1961ff0019909116610100171660011790555b611603611df6565b6110b97f80ac58cd000000000000000000000000000000000000000000000000000000006116ee565b61163e6101078263ffffffff611eb116565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6116876101078263ffffffff611f1d16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60006116e97f80ac58cd000000000000000000000000000000000000000000000000000000006108c7565b905090565b600160e060020a03198082161415611750576040805160e560020a62461bcd02815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b600160e060020a0319166000908152603360205260409020805460ff19166001179055565b61177f8282611fa1565b6117898282611db8565b6113db816120e7565b61179b826114f7565b15156117db5760405160e560020a62461bcd02815260040180806020018281038252602c815260200180612469602c913960400191505060405180910390fd5b600082815260d4602090815260409091208251610b7d928401906121fb565b5490565b6000600160a060020a038216151561184a5760405160e560020a62461bcd0281526004018080602001828103825260228152602001806124956022913960400191505060405180910390fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600061187e84600160a060020a031661212b565b151561188c575060016119f1565b600084600160a060020a031663150b7a026118a5611514565b8887876040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561194657818101518382015260200161192e565b50505050905090810190601f1680156119735780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561199557600080fd5b505af11580156119a9573d6000803e3d6000fd5b505050506040513d60208110156119bf57600080fd5b5051600160e060020a0319167f150b7a0200000000000000000000000000000000000000000000000000000000149150505b949350505050565b60006116e97f5b5e139f000000000000000000000000000000000000000000000000000000006108c7565b600054610100900460ff1680611a3d5750611a3d611563565b80611a4b575060005460ff16155b1515611a8b5760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff16158015611ab6576000805460ff1961ff0019909116610100171660011790555b611abf82611297565b15156113c9576113c982611675565b6000611ad9826114f7565b1515611b195760405160e560020a62461bcd02815260040180806020018281038252602c815260200180612335602c913960400191505060405180910390fd5b6000611b2483610f0f565b905080600160a060020a031684600160a060020a03161480611b5f575083600160a060020a0316611b548461097d565b600160a060020a0316145b806119f157506119f181856114c9565b82600160a060020a0316611b8282610f0f565b600160a060020a031614611bca5760405160e560020a62461bcd0281526004018080602001828103825260298152602001806124e56029913960400191505060405180910390fd5b600160a060020a0382161515611c145760405160e560020a62461bcd0281526004018080602001828103825260248152602001806123116024913960400191505060405180910390fd5b611c1d81612133565b600160a060020a0383166000908152606860205260409020611c3e9061217b565b600160a060020a0382166000908152606860205260409020611c5f90612192565b600081815260666020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600160a060020a0382166000908152609c6020526040812054611cf290600163ffffffff61219b16565b6000838152609d6020526040902054909150808214611d8f57600160a060020a0384166000908152609c60205260408120805484908110611d2f57fe5b9060005260206000200154905080609c600087600160a060020a0316600160a060020a0316815260200190815260200160002083815481101515611d6f57fe5b6000918252602080832090910192909255918252609d9052604090208190555b600160a060020a0384166000908152609c60205260409020805490610d06906000198301612279565b600160a060020a039091166000908152609c602081815260408084208054868652609d84529185208290559282526001810183559183529091200155565b600054610100900460ff1680611e0f5750611e0f611563565b80611e1d575060005460ff16155b1515611e5d5760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff16158015611e88576000805460ff1961ff0019909116610100171660011790555b6110b97f01ffc9a7000000000000000000000000000000000000000000000000000000006116ee565b611ebb82826117fe565b1515611efb5760405160e560020a62461bcd02815260040180806020018281038252602181526020018061241c6021913960400191505060405180910390fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b611f2782826117fe565b15611f7c576040805160e560020a62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0382161515612001576040805160e560020a62461bcd02815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61200a816114f7565b1561205f576040805160e560020a62461bcd02815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b6000818152606660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387169081179091558352606890915290206120ab90612192565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b609e80546000838152609f60205260408120829055600182018355919091527fcfe2a20ff701a1f3e14f63bd70d6c6bc6fba8172ec6d5a505cdab3927c0a9de60155565b6000903b1190565b600081815260676020526040902054600160a060020a0316156110cb576000908152606760205260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b805461218e90600163ffffffff61219b16565b9055565b80546001019055565b6000828211156121f5576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061223c57805160ff1916838001178555612269565b82800160010185558215612269579182015b8281111561226957825182559160200191906001019061224e565b50612275929150612299565b5090565b815481835581811115610b7d57600083815260209020610b7d9181019083015b61097a91905b80821115612275576000815560010161229f56fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a165627a7a723058203c861c1ced341a550e24543650e42425c07f683e4b7ae49e5303f55f04e144d00029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610190576000357c0100000000000000000000000000000000000000000000000000000000900480636352211e116100fb57806398650275116100b4578063b88d4fde1161008e578063b88d4fde14610790578063c4d66de814610856578063c87b56dd1461087c578063e985e9c51461089957610190565b80639865027514610734578063a22cb4651461073c578063aa271e1a1461076a57610190565b80636352211e146106b3578063637eea19146106d057806370a08231146106d85780638129fc1c146106fe57806395d89b4114610706578063983b2d561461070e57610190565b80632f745c591161014d5780632f745c59146103045780633aaac28e1461033057806342842e0e146104785780634cd88b76146104ae5780634f6ccce7146105db57806350bb4e7f146105f857610190565b806301ffc9a71461019557806306fdde03146101d0578063081812fc1461024d578063095ea7b31461028657806318160ddd146102b457806323b872dd146102ce575b600080fd5b6101bc600480360360208110156101ab57600080fd5b5035600160e060020a0319166108c7565b604080519115158252519081900360200190f35b6101d86108e6565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102125781810151838201526020016101fa565b50505050905090810190601f16801561023f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61026a6004803603602081101561026357600080fd5b503561097d565b60408051600160a060020a039092168252519081900360200190f35b6102b26004803603604081101561029c57600080fd5b50600160a060020a0381351690602001356109e4565b005b6102bc610b1b565b60408051918252519081900360200190f35b6102b2600480360360608110156102e457600080fd5b50600160a060020a03813581169160208101359091169060400135610b21565b6102bc6004803603604081101561031a57600080fd5b50600160a060020a038135169060200135610b82565b6102b26004803603608081101561034657600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561037157600080fd5b82018360208201111561038357600080fd5b803590602001918460018302840111640100000000831117156103a557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156103f857600080fd5b82018360208201111561040a57600080fd5b8035906020019184600183028401116401000000008311171561042c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050509035600160a060020a03169150610c049050565b6102b26004803603606081101561048e57600080fd5b50600160a060020a03813581169160208101359091169060400135610d0d565b6102b2600480360360408110156104c457600080fd5b8101906020810181356401000000008111156104df57600080fd5b8201836020820111156104f157600080fd5b8035906020019184600183028401116401000000008311171561051357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561056657600080fd5b82018360208201111561057857600080fd5b8035906020019184600183028401116401000000008311171561059a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d29945050505050565b6102bc600480360360208110156105f157600080fd5b5035610e35565b6101bc6004803603606081101561060e57600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561063e57600080fd5b82018360208201111561065057600080fd5b8035906020019184600183028401116401000000008311171561067257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e9f945050505050565b61026a600480360360208110156106c957600080fd5b5035610f0f565b61026a610f6e565b6102bc600480360360208110156106ee57600080fd5b5035600160a060020a0316610f7e565b6102b2610feb565b6101d86110ce565b6102b26004803603602081101561072457600080fd5b5035600160a060020a031661112f565b6102b2611183565b6102b26004803603604081101561075257600080fd5b50600160a060020a0381351690602001351515611195565b6101bc6004803603602081101561078057600080fd5b5035600160a060020a0316611297565b6102b2600480360360808110156107a657600080fd5b600160a060020a038235811692602081013590911691604082013591908101906080810160608201356401000000008111156107e157600080fd5b8201836020820111156107f357600080fd5b8035906020019184600183028401116401000000008311171561081557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506112ab945050505050565b6102b26004803603602081101561086c57600080fd5b5035600160a060020a0316611308565b6101d86004803603602081101561089257600080fd5b50356113df565b6101bc600480360360408110156108af57600080fd5b50600160a060020a03813581169160200135166114c9565b600160e060020a03191660009081526033602052604090205460ff1690565b60d28054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109725780601f1061094757610100808354040283529160200191610972565b820191906000526020600020905b81548152906001019060200180831161095557829003601f168201915b505050505090505b90565b6000610988826114f7565b15156109c85760405160e560020a62461bcd02815260040180806020018281038252602c81526020018061243d602c913960400191505060405180910390fd5b50600090815260676020526040902054600160a060020a031690565b60006109ef82610f0f565b9050600160a060020a038381169082161415610a3f5760405160e560020a62461bcd02815260040180806020018281038252602181526020018061253d6021913960400191505060405180910390fd5b80600160a060020a0316610a51611514565b600160a060020a03161480610a725750610a7281610a6d611514565b6114c9565b1515610ab25760405160e560020a62461bcd0281526004018080602001828103825260388152602001806123616038913960400191505060405180910390fd5b600082815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b609e5490565b610b32610b2c611514565b82611518565b1515610b725760405160e560020a62461bcd02815260040180806020018281038252603181526020018061255e6031913960400191505060405180910390fd5b610b7d838383611544565b505050565b6000610b8d83610f7e565b8210610bcd5760405160e560020a62461bcd02815260040180806020018281038252602b8152602001806122b4602b913960400191505060405180910390fd5b600160a060020a0383166000908152609c60205260409020805483908110610bf157fe5b9060005260206000200154905092915050565b600054610100900460ff1680610c1d5750610c1d611563565b80610c2b575060005460ff16155b1515610c6b5760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff16158015610c96576000805460ff1961ff0019909116610100171660011790555b61016c805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038716179055610cc7611569565b610ccf610feb565b610cd98484610d29565b610ce230611308565b610ceb3061162c565b610cf482611675565b8015610d06576000805461ff00191690555b5050505050565b610b7d83838360206040519081016040528060008152506112ab565b600054610100900460ff1680610d425750610d42611563565b80610d50575060005460ff16155b1515610d905760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff16158015610dbb576000805460ff1961ff0019909116610100171660011790555b610dc36116be565b1515610dce57600080fd5b8251610de19060d29060208601906121fb565b508151610df59060d39060208501906121fb565b50610e1f7f5b5e139f000000000000000000000000000000000000000000000000000000006116ee565b8015610b7d576000805461ff0019169055505050565b6000610e3f610b1b565b8210610e7f5760405160e560020a62461bcd02815260040180806020018281038252602c81526020018061258f602c913960400191505060405180910390fd5b609e805483908110610e8d57fe5b90600052602060002001549050919050565b6000610eb1610eac611514565b611297565b1515610ef15760405160e560020a62461bcd0281526004018080602001828103825260308152602001806123ec6030913960400191505060405180910390fd5b610efb8484611775565b610f058383611792565b5060019392505050565b600081815260666020526040812054600160a060020a0316801515610f685760405160e560020a62461bcd0281526004018080602001828103825260298152602001806123c36029913960400191505060405180910390fd5b92915050565b61016c54600160a060020a031681565b6000600160a060020a0382161515610fca5760405160e560020a62461bcd02815260040180806020018281038252602a815260200180612399602a913960400191505060405180910390fd5b600160a060020a0382166000908152606860205260409020610f68906117fa565b600054610100900460ff16806110045750611004611563565b80611012575060005460ff16155b15156110525760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff1615801561107d576000805460ff1961ff0019909116610100171660011790555b6110856116be565b151561109057600080fd5b6110b97f780e9d63000000000000000000000000000000000000000000000000000000006116ee565b80156110cb576000805461ff00191690555b50565b60d38054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109725780601f1061094757610100808354040283529160200191610972565b61113a610eac611514565b151561117a5760405160e560020a62461bcd0281526004018080602001828103825260308152602001806123ec6030913960400191505060405180910390fd5b6110cb81611675565b61119361118e611514565b61162c565b565b61119d611514565b600160a060020a0383811691161415611200576040805160e560020a62461bcd02815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806069600061120d611514565b600160a060020a03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611251611514565b6040805184151581529051600160a060020a0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6000610f686101078363ffffffff6117fe16565b6112b6848484610b21565b6112c28484848461186a565b15156113025760405160e560020a62461bcd0281526004018080602001828103825260328152602001806122df6032913960400191505060405180910390fd5b50505050565b600054610100900460ff16806113215750611321611563565b8061132f575060005460ff16155b151561136f5760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff1615801561139a576000805460ff1961ff0019909116610100171660011790555b6113a26116be565b15156113ad57600080fd5b6113b56119f9565b15156113c057600080fd5b6113c982611a24565b80156113db576000805461ff00191690555b5050565b60606113ea826114f7565b151561142a5760405160e560020a62461bcd02815260040180806020018281038252602f81526020018061250e602f913960400191505060405180910390fd5b600082815260d4602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156114bd5780601f10611492576101008083540402835291602001916114bd565b820191906000526020600020905b8154815290600101906020018083116114a057829003601f168201915b50505050509050919050565b600160a060020a03918216600090815260696020908152604080832093909416825291909152205460ff1690565b600090815260666020526040902054600160a060020a0316151590565b3390565b61016c54600090600160a060020a038481169116148061153d575061153d8383611ace565b9392505050565b61154f838383611b6f565b6115598382611cc8565b610b7d8282611db8565b303b1590565b600054610100900460ff16806115825750611582611563565b80611590575060005460ff16155b15156115d05760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff161580156115fb576000805460ff1961ff0019909116610100171660011790555b611603611df6565b6110b97f80ac58cd000000000000000000000000000000000000000000000000000000006116ee565b61163e6101078263ffffffff611eb116565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6116876101078263ffffffff611f1d16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60006116e97f80ac58cd000000000000000000000000000000000000000000000000000000006108c7565b905090565b600160e060020a03198082161415611750576040805160e560020a62461bcd02815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b600160e060020a0319166000908152603360205260409020805460ff19166001179055565b61177f8282611fa1565b6117898282611db8565b6113db816120e7565b61179b826114f7565b15156117db5760405160e560020a62461bcd02815260040180806020018281038252602c815260200180612469602c913960400191505060405180910390fd5b600082815260d4602090815260409091208251610b7d928401906121fb565b5490565b6000600160a060020a038216151561184a5760405160e560020a62461bcd0281526004018080602001828103825260228152602001806124956022913960400191505060405180910390fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600061187e84600160a060020a031661212b565b151561188c575060016119f1565b600084600160a060020a031663150b7a026118a5611514565b8887876040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561194657818101518382015260200161192e565b50505050905090810190601f1680156119735780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561199557600080fd5b505af11580156119a9573d6000803e3d6000fd5b505050506040513d60208110156119bf57600080fd5b5051600160e060020a0319167f150b7a0200000000000000000000000000000000000000000000000000000000149150505b949350505050565b60006116e97f5b5e139f000000000000000000000000000000000000000000000000000000006108c7565b600054610100900460ff1680611a3d5750611a3d611563565b80611a4b575060005460ff16155b1515611a8b5760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff16158015611ab6576000805460ff1961ff0019909116610100171660011790555b611abf82611297565b15156113c9576113c982611675565b6000611ad9826114f7565b1515611b195760405160e560020a62461bcd02815260040180806020018281038252602c815260200180612335602c913960400191505060405180910390fd5b6000611b2483610f0f565b905080600160a060020a031684600160a060020a03161480611b5f575083600160a060020a0316611b548461097d565b600160a060020a0316145b806119f157506119f181856114c9565b82600160a060020a0316611b8282610f0f565b600160a060020a031614611bca5760405160e560020a62461bcd0281526004018080602001828103825260298152602001806124e56029913960400191505060405180910390fd5b600160a060020a0382161515611c145760405160e560020a62461bcd0281526004018080602001828103825260248152602001806123116024913960400191505060405180910390fd5b611c1d81612133565b600160a060020a0383166000908152606860205260409020611c3e9061217b565b600160a060020a0382166000908152606860205260409020611c5f90612192565b600081815260666020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600160a060020a0382166000908152609c6020526040812054611cf290600163ffffffff61219b16565b6000838152609d6020526040902054909150808214611d8f57600160a060020a0384166000908152609c60205260408120805484908110611d2f57fe5b9060005260206000200154905080609c600087600160a060020a0316600160a060020a0316815260200190815260200160002083815481101515611d6f57fe5b6000918252602080832090910192909255918252609d9052604090208190555b600160a060020a0384166000908152609c60205260409020805490610d06906000198301612279565b600160a060020a039091166000908152609c602081815260408084208054868652609d84529185208290559282526001810183559183529091200155565b600054610100900460ff1680611e0f5750611e0f611563565b80611e1d575060005460ff16155b1515611e5d5760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806124b7602e913960400191505060405180910390fd5b600054610100900460ff16158015611e88576000805460ff1961ff0019909116610100171660011790555b6110b97f01ffc9a7000000000000000000000000000000000000000000000000000000006116ee565b611ebb82826117fe565b1515611efb5760405160e560020a62461bcd02815260040180806020018281038252602181526020018061241c6021913960400191505060405180910390fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b611f2782826117fe565b15611f7c576040805160e560020a62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0382161515612001576040805160e560020a62461bcd02815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61200a816114f7565b1561205f576040805160e560020a62461bcd02815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b6000818152606660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387169081179091558352606890915290206120ab90612192565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b609e80546000838152609f60205260408120829055600182018355919091527fcfe2a20ff701a1f3e14f63bd70d6c6bc6fba8172ec6d5a505cdab3927c0a9de60155565b6000903b1190565b600081815260676020526040902054600160a060020a0316156110cb576000908152606760205260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b805461218e90600163ffffffff61219b16565b9055565b80546001019055565b6000828211156121f5576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061223c57805160ff1916838001178555612269565b82800160010185558215612269579182015b8281111561226957825182559160200191906001019061224e565b50612275929150612299565b5090565b815481835581811115610b7d57600083815260209020610b7d9181019083015b61097a91905b80821115612275576000815560010161229f56fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a165627a7a723058203c861c1ced341a550e24543650e42425c07f683e4b7ae49e5303f55f04e144d00029",
  "sourceMap": "730:799:0:-;;;;;;;;;",
  "deployedSourceMap": "730:799:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;730:799:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:131:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1008:131:7;-1:-1:-1;;;;;;1008:131:7;;:::i;:::-;;;;;;;;;;;;;;;;;;1435:83:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1435:83:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4537:200:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4537:200:10;;:::i;:::-;;;;-1:-1:-1;;;;;4537:200:10;;;;;;;;;;;;;;3837:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3837:415:10;;;;;;;;:::i;:::-;;2454:94:11;;;:::i;:::-;;;;;;;;;;;;;;;;6183:287:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6183:287:10;;;;;;;;;;;;;;;;;:::i;2072:229:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2072:229:11;;;;;;;;:::i;876:463:0:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;876:463:0;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;876:463:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;876:463:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;876:463:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;876:463:0;;;;;;;;-1:-1:-1;876:463:0;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;876:463:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;876:463:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;876:463:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;876:463:0;;-1:-1:-1;;;876:463:0;;-1:-1:-1;;;;;876:463:0;;-1:-1:-1;876:463:0;;-1:-1:-1;876:463:0:i;7103:132:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7103:132:10;;;;;;;;;;;;;;;;;:::i;871:321:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;871:321:12;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;871:321:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;871:321:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;871:321:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;871:321:12;;;;;;;;-1:-1:-1;871:321:12;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;871:321:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;871:321:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;871:321:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;871:321:12;;-1:-1:-1;871:321:12;;-1:-1:-1;;;;;871:321:12:i;2886:196:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2886:196:11;;:::i;842:209:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;842:209:13;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;842:209:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;842:209:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;842:209:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;842:209:13;;-1:-1:-1;842:209:13;;-1:-1:-1;;;;;842:209:13:i;3193:223:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3193:223:10;;:::i;847:22:0:-;;;:::i;2767:207:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2767:207:10;-1:-1:-1;;;;;2767:207:10;;:::i;1316:242:11:-;;;:::i;1627:87:12:-;;;:::i;756:90:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;756:90:5;-1:-1:-1;;;;;756:90:5;;:::i;852:77::-;;;:::i;5030:249:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5030:249:10;;;;;;;;;;:::i;643:107:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;643:107:5;-1:-1:-1;;;;;643:107:5;;:::i;7942:265:10:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7942:265:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7942:265:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7942:265:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7942:265:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7942:265:10;;-1:-1:-1;7942:265:10;;-1:-1:-1;;;;;7942:265:10:i;339:203:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;339:203:13;-1:-1:-1;;;;;339:203:13;;:::i;1914:202:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1914:202:12;;:::i;5601:145:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5601:145:10;;;;;;;;;;:::i;1008:131:7:-;-1:-1:-1;;;;;;1099:33:7;1076:4;1099:33;;;:20;:33;;;;;;;;;1008:131::o;1435:83:12:-;1506:5;1499:12;;;;;;;;-1:-1:-1;;1499:12:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:13;;1499:12;;1506:5;;1499:12;;1506:5;1499:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1435:83;;:::o;4537:200:10:-;4596:7;4623:16;4631:7;4623;:16::i;:::-;4615:73;;;;;;-1:-1:-1;;;;;4615:73:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4706:24:10;;;;:15;:24;;;;;;-1:-1:-1;;;;;4706:24:10;;4537:200::o;3837:415::-;3900:13;3916:16;3924:7;3916;:16::i;:::-;3900:32;-1:-1:-1;;;;;;3950:11:10;;;;;;;;3942:57;;;;-1:-1:-1;;;;;3942:57:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4034:5;-1:-1:-1;;;;;4018:21:10;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4018:21:10;;:62;;;;4043:37;4060:5;4067:12;:10;:12::i;:::-;4043:16;:37::i;:::-;4010:152;;;;;;-1:-1:-1;;;;;4010:152:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4173:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;4173:29:10;-1:-1:-1;;;;;4173:29:10;;;;;;;;;4217:28;;4173:24;;4217:28;;;;;;;3837:415;;;:::o;2454:94:11:-;2524:10;:17;2454:94;:::o;6183:287:10:-;6325:41;6344:12;:10;:12::i;:::-;6358:7;6325:18;:41::i;:::-;6317:103;;;;;;-1:-1:-1;;;;;6317:103:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6431:32;6445:4;6451:2;6455:7;6431:13;:32::i;:::-;6183:287;;;:::o;2072:229:11:-;2152:7;2187:16;2197:5;2187:9;:16::i;:::-;2179:24;;2171:80;;;;-1:-1:-1;;;;;2171:80:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2268:19:11;;;;;;:12;:19;;;;;:26;;2288:5;;2268:26;;;;;;;;;;;;;;2261:33;;2072:229;;;;:::o;876:463:0:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;996:7:0;:18;;-1:-1:-1;;996:18:0;-1:-1:-1;;;;;996:18:0;;;;;1024:19;:17;:19::i;:::-;1053:29;:27;:29::i;:::-;1092:39;1118:4;1124:6;1092:25;:39::i;:::-;1218:48;1260:4;1218:33;:48::i;:::-;1276:28;1298:4;1276:13;:28::i;:::-;1314:18;1325:6;1314:10;:18::i;:::-;1268:14:19;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:19;;;1264:55;876:463:0;;;;;:::o;7103:132:10:-;7189:39;7206:4;7212:2;7216:7;7189:39;;;;;;;;;;;;;:16;:39::i;871:321:12:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;970:28:12;:26;:28::i;:::-;962:37;;;;;;;;1010:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1032:16:12;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1136:49:12;1155:29;1136:18;:49::i;:::-;1268:14:19;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:19;;;871:321:12;;;:::o;2886:196:11:-;2944:7;2979:13;:11;:13::i;:::-;2971:21;;2963:78;;;;-1:-1:-1;;;;;2963:78:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3058:10;:17;;3069:5;;3058:17;;;;;;;;;;;;;;3051:24;;2886:196;;;:::o;842:209:13:-;948:4;544:22:5;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;-1:-1:-1;;;;;536:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;964:18:13;970:2;974:7;964:5;:18::i;:::-;992:31;1005:7;1014:8;992:12;:31::i;:::-;-1:-1:-1;1040:4:13;842:209;;;;;:::o;3193:223:10:-;3248:7;3283:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3283:20:10;3321:19;;;3313:73;;;;-1:-1:-1;;;;;3313:73:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3404:5;3193:223;-1:-1:-1;;3193:223:10:o;847:22:0:-;;;-1:-1:-1;;;;;847:22:0;;:::o;2767:207:10:-;2822:7;-1:-1:-1;;;;;2849:19:10;;;;2841:74;;;;-1:-1:-1;;;;;2841:74:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2933:24:10;;;;;;:17;:24;;;;;:34;;:32;:34::i;1316:242:11:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;1375:28:11;:26;:28::i;:::-;1367:37;;;;;;;;1500:51;1519:31;1500:18;:51::i;:::-;1268:14:19;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:19;;;1264:55;1316:242:11;:::o;1627:87:12:-;1700:7;1693:14;;;;;;;;-1:-1:-1;;1693:14:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:13;;1693:14;;1700:7;;1693:14;;1700:7;1693:14;;;;;;;;;;;;;;;;;;;;;;;;756:90:5;544:22;553:12;:10;:12::i;544:22::-;536:83;;;;;;-1:-1:-1;;;;;536:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;5030:249:10:-;5115:12;:10;:12::i;:::-;-1:-1:-1;;;;;5109:18:10;;;;;;;5101:56;;;;;-1:-1:-1;;;;;5101:56:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;5207:8;5168:18;:32;5187:12;:10;:12::i;:::-;-1:-1:-1;;;;;5168:32:10;;;;;;;;;;;;;;;;;-1:-1:-1;5168:32:10;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;5168:47:10;;;;;;;;;;;5245:12;:10;:12::i;:::-;5230:42;;;;;;;;;;-1:-1:-1;;;;;5230:42:10;;;;;;;;;;;;;;5030:249;;:::o;643:107:5:-;699:4;722:21;:8;735:7;722:21;:12;:21;:::i;7942:265:10:-;8048:31;8061:4;8067:2;8071:7;8048:12;:31::i;:::-;8097:48;8120:4;8126:2;8130:7;8139:5;8097:22;:48::i;:::-;8089:111;;;;;;-1:-1:-1;;;;;8089:111:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7942:265;;;;:::o;339:203:13:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;412:28:13;:26;:28::i;:::-;404:37;;;;;;;;459:36;:34;:36::i;:::-;451:45;;;;;;;;506:29;528:6;506:21;:29::i;:::-;1268:14:19;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:19;;;1264:55;339:203:13;;:::o;1914:202:12:-;1972:13;2005:16;2013:7;2005;:16::i;:::-;1997:76;;;;;;-1:-1:-1;;;;;1997:76:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2090:19;;;;:10;:19;;;;;;;;;2083:26;;;;;;-1:-1:-1;;2083:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2090:19;;2083:26;;2090:19;2083:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1914:202;;;:::o;5601:145:10:-;-1:-1:-1;;;;;5704:25:10;;;5681:4;5704:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5601:145::o;8402:152::-;8459:4;8491:20;;;:11;:20;;;;;;-1:-1:-1;;;;;8491:20:10;8528:19;;;8402:152::o;791:88:3:-;862:10;791:88;:::o;1345:182:0:-;1465:7;;1430:4;;-1:-1:-1;;;;;1454:18:0;;;1465:7;;1454:18;;:65;;;1476:43;1502:7;1511;1476:25;:43::i;:::-;1446:74;1345:182;-1:-1:-1;;;1345:182:0:o;3457:239:11:-;3542:38;3562:4;3568:2;3572:7;3542:19;:38::i;:::-;3591:47;3624:4;3630:7;3591:32;:47::i;:::-;3649:40;3677:2;3681:7;3649:27;:40::i;1409:467:19:-;1842:7;1830:20;1864:7;1409:467;:::o;2229:205:10:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;2280:19:10;:17;:19::i;:::-;2387:40;2406:20;2387:18;:40::i;1060:127:5:-;1119:24;:8;1135:7;1119:24;:15;:24;:::i;:::-;1158:22;;-1:-1:-1;;;;;1158:22:5;;;;;;;;1060:127;:::o;935:119::-;991:21;:8;1004:7;991:21;:12;:21;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:5;;;;;;;;935:119;:::o;2440:123:10:-;2494:4;2517:39;2535:20;2517:17;:39::i;:::-;2510:46;;2440:123;:::o;1533:190:7:-;-1:-1:-1;;;;;;1608:25:7;;;;;1600:66;;;;;-1:-1:-1;;;;;1600:66:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1676:33:7;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1676:40:7;1712:4;1676:40;;;1533:190::o;3953:196:11:-;4016:24;4028:2;4032:7;4016:11;:24::i;:::-;4051:40;4079:2;4083:7;4051:27;:40::i;:::-;4102;4134:7;4102:31;:40::i;2355:192:12:-;2440:16;2448:7;2440;:16::i;:::-;2432:73;;;;;;-1:-1:-1;;;;;2432:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;1063:112:6:-;1154:14;;1063:112::o;779:200:4:-;851:4;-1:-1:-1;;;;;875:21:4;;;;867:68;;;;-1:-1:-1;;;;;867:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:4;:11;:20;;;;;;;;;;;;;;;779:200::o;12081:349:10:-;12202:4;12227:15;:2;-1:-1:-1;;;;;12227:13:10;;:15::i;:::-;12226:16;12222:58;;;-1:-1:-1;12265:4:10;12258:11;;12222:58;12290:13;12322:2;-1:-1:-1;;;;;12306:36:10;;12343:12;:10;:12::i;:::-;12357:4;12363:7;12372:5;12306:72;;;;;;;;;;;;;-1:-1:-1;;;;;12306:72:10;-1:-1:-1;;;;;12306:72:10;;;;;;-1:-1:-1;;;;;12306:72:10;-1:-1:-1;;;;;12306:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12306:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12306:72:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12306:72:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12306:72:10;-1:-1:-1;;;;;;12396:26:10;12406:16;12396:26;;-1:-1:-1;;12081:349:10;;;;;;;:::o;1198:132:12:-;1252:4;1275:48;1293:29;1275:17;:48::i;361:137:5:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:5;440:6;431:8;:16::i;:::-;430:17;426:66;;;463:18;474:6;463:10;:18::i;8915:329:10:-;9000:4;9024:16;9032:7;9024;:16::i;:::-;9016:73;;;;;;-1:-1:-1;;;;;9016:73:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9099:13;9115:16;9123:7;9115;:16::i;:::-;9099:32;;9160:5;-1:-1:-1;;;;;9149:16:10;:7;-1:-1:-1;;;;;9149:16:10;;:51;;;;9193:7;-1:-1:-1;;;;;9169:31:10;:20;9181:7;9169:11;:20::i;:::-;-1:-1:-1;;;;;9169:31:10;;9149:51;:87;;;;9204:32;9221:5;9228:7;9204:16;:32::i;11061:447::-;11174:4;-1:-1:-1;;;;;11154:24:10;:16;11162:7;11154;:16::i;:::-;-1:-1:-1;;;;;11154:24:10;;11146:78;;;;-1:-1:-1;;;;;11146:78:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11242:16:10;;;;11234:65;;;;-1:-1:-1;;;;;11234:65:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11310:23;11325:7;11310:14;:23::i;:::-;-1:-1:-1;;;;;11344:23:10;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;11389:21:10;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;11433:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;11433:25:10;-1:-1:-1;;;;;11433:25:10;;;;;;;;;11474:27;;11433:20;;11474:27;;;;;;;11061:447;;;:::o;6565:1128:11:-;-1:-1:-1;;;;;6852:18:11;;6827:22;6852:18;;;:12;:18;;;;;:25;:32;;6882:1;6852:32;:29;:32;:::i;:::-;6894:18;6915:26;;;:17;:26;;;;;;6827:57;;-1:-1:-1;7045:28:11;;;7041:323;;-1:-1:-1;;;;;7111:18:11;;7089:19;7111:18;;;:12;:18;;;;;:34;;7130:14;;7111:34;;;;;;;;;;;;;;7089:56;;7193:11;7160:12;:18;7173:4;-1:-1:-1;;;;;7160:18:11;-1:-1:-1;;;;;7160:18:11;;;;;;;;;;;;7179:10;7160:30;;;;;;;;;;;;;;;;;;;;;:44;;;;7276:30;;;:17;:30;;;;;:43;;;7041:323;-1:-1:-1;;;;;7450:18:11;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;7450:27:11;;;:::i;5411:183::-;-1:-1:-1;;;;;5524:16:11;;;;;;;:12;:16;;;;;;;;:23;;5495:26;;;:17;:26;;;;;:52;;;5557:16;;;39:1:-1;23:18;;45:23;;5557:30:11;;;;;;;;5411:183::o;624:234:7:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;811:40:7;830:20;811:18;:40::i;510:180:4:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;-1:-1:-1;;;;;581:64:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:4;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:4;;;510:180::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;;;328:63:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:4;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:4;424:4;401:27;;;260:175::o;9489:327:10:-;-1:-1:-1;;;;;9560:16:10;;;;9552:61;;;;;-1:-1:-1;;;;;9552:61:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9632:16;9640:7;9632;:16::i;:::-;9631:17;9623:58;;;;;-1:-1:-1;;;;;9623:58:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;9692:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;9692:25:10;-1:-1:-1;;;;;9692:25:10;;;;;;;;9727:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;9776;;9801:7;;-1:-1:-1;;;;;9776:33:10;;;9793:1;;9776:33;;9793:1;;9776:33;9489:327;;:::o;5789:161:11:-;5892:10;:17;;5865:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5919:24:11;;;;;;;5789:161::o;542:413:18:-;602:4;902:20;;940:8;;542:413::o;12592:171:10:-;12691:1;12655:24;;;:15;:24;;;;;;-1:-1:-1;;;;;12655:24:10;:38;12651:106;;12744:1;12709:24;;;:15;:24;;;;;:37;;-1:-1:-1;;12709:37:10;;;12592:171::o;1276:108:6:-;1356:14;;:21;;1375:1;1356:21;:18;:21;:::i;:::-;1339:38;;1276:108::o;1181:89::-;1244:19;;1262:1;1244:19;;;1181:89::o;1274:179:9:-;1332:7;1359:6;;;;1351:49;;;;;-1:-1:-1;;;;;1351:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:9;;;1274:179::o;730:799:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;730:799:0;;;-1:-1:-1;730:799:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol\";\n// import \"../node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\";\n// import \"../node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol\";\n// import \"../node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\";\n\ncontract ERC721Patronage_v0 is Initializable, ERC721, ERC721Enumerable, ERC721Metadata, ERC721MetadataMintable {\n    address public steward;\n\n    function setup(address _steward, string memory name, string memory symbol, address minter) public initializer {\n        steward = _steward;\n        ERC721.initialize();\n        ERC721Enumerable.initialize();\n        ERC721Metadata.initialize(name, symbol);\n                // Initialize the minter and pauser roles, and renounce them\n        ERC721MetadataMintable.initialize(address(this));\n        _removeMinter(address(this));\n        _addMinter(minter);\n    }\n\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view returns (bool) {\n        return (spender == steward || ERC721._isApprovedOrOwner(spender, tokenId));\n    }\n}\n",
  "sourcePath": "/home/jasoons/Documents/clean-code/contracts/contracts/ERC721Patronage_v0.sol",
  "ast": {
    "absolutePath": "/home/jasoons/Documents/clean-code/contracts/contracts/ERC721Patronage_v0.sol",
    "exportedSymbols": {
      "ERC721Patronage_v0": [
        92
      ]
    },
    "id": 93,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 2598,
        "src": "25:84:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 2963,
        "src": "110:94:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 3120,
        "src": "205:92:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 3190,
        "src": "298:100:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3449,
              "src": "761:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3449",
                "typeString": "contract Initializable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "761:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2597,
              "src": "776:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2597",
                "typeString": "contract ERC721"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "776:6:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2962,
              "src": "784:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$2962",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "784:16:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3119,
              "src": "802:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$3119",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "802:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3189,
              "src": "818:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$3189",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "818:22:0"
          }
        ],
        "contractDependencies": [
          1548,
          1752,
          1862,
          1872,
          2597,
          2962,
          3119,
          3189,
          3295,
          3325,
          3351,
          3449
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 92,
        "linearizedBaseContracts": [
          92,
          3189,
          1752,
          3119,
          3351,
          2962,
          3325,
          2597,
          3295,
          1862,
          1872,
          1548,
          3449
        ],
        "name": "ERC721Patronage_v0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 17,
            "name": "steward",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "847:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "847:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "986:353:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "steward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "996:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 31,
                      "name": "_steward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1006:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "996:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "996:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2597,
                        "src": "1024:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2597_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2071,
                      "src": "1024:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1024:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2962,
                        "src": "1053:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$2962_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2649,
                      "src": "1053:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1118:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1124:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 44,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3119,
                        "src": "1092:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$3119_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3018,
                      "src": "1092:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 55,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3512,
                            "src": "1260:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          ],
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1252:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1252:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "ERC721MetadataMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3189,
                        "src": "1218:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$3189_$",
                          "typeString": "type(contract ERC721MetadataMintable)"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3158,
                      "src": "1218:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1218:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3512,
                            "src": "1298:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          ],
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1290:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1290:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 59,
                      "name": "_removeMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1747,
                      "src": "1276:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1276:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1276:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1325:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 65,
                      "name": "_addMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1731,
                      "src": "1314:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 28,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3430,
                  "src": "974:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "974:11:0"
              }
            ],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "_steward",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "891:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "909:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "929:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "951:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "890:76:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "986:0:0"
            },
            "scope": 92,
            "src": "876:463:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "1436:91:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "1454:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "steward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1465:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1454:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 84,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "1502:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 85,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "1511:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 82,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2597,
                              "src": "1476:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2597_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_isApprovedOrOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2372,
                            "src": "1476:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) view returns (bool)"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1476:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1454:65:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 88,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1453:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 78,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "1446:74:0"
                }
              ]
            },
            "documentation": null,
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1373:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1390:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1372:34:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1430:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1429:6:0"
            },
            "scope": 92,
            "src": "1345:182:0",
            "stateMutability": "view",
            "superFunction": 2372,
            "visibility": "internal"
          }
        ],
        "scope": 93,
        "src": "730:799:0"
      }
    ],
    "src": "0:1530:0"
  },
  "legacyAST": {
    "absolutePath": "/home/jasoons/Documents/clean-code/contracts/contracts/ERC721Patronage_v0.sol",
    "exportedSymbols": {
      "ERC721Patronage_v0": [
        92
      ]
    },
    "id": 93,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 2598,
        "src": "25:84:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 2963,
        "src": "110:94:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 3120,
        "src": "205:92:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 3190,
        "src": "298:100:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3449,
              "src": "761:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3449",
                "typeString": "contract Initializable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "761:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2597,
              "src": "776:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2597",
                "typeString": "contract ERC721"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "776:6:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2962,
              "src": "784:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$2962",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "784:16:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3119,
              "src": "802:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$3119",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "802:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3189,
              "src": "818:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$3189",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "818:22:0"
          }
        ],
        "contractDependencies": [
          1548,
          1752,
          1862,
          1872,
          2597,
          2962,
          3119,
          3189,
          3295,
          3325,
          3351,
          3449
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 92,
        "linearizedBaseContracts": [
          92,
          3189,
          1752,
          3119,
          3351,
          2962,
          3325,
          2597,
          3295,
          1862,
          1872,
          1548,
          3449
        ],
        "name": "ERC721Patronage_v0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 17,
            "name": "steward",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "847:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "847:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "986:353:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "steward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "996:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 31,
                      "name": "_steward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1006:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "996:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "996:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2597,
                        "src": "1024:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2597_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2071,
                      "src": "1024:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1024:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2962,
                        "src": "1053:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$2962_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2649,
                      "src": "1053:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1118:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1124:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 44,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3119,
                        "src": "1092:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$3119_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3018,
                      "src": "1092:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 55,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3512,
                            "src": "1260:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          ],
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1252:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1252:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "ERC721MetadataMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3189,
                        "src": "1218:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$3189_$",
                          "typeString": "type(contract ERC721MetadataMintable)"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3158,
                      "src": "1218:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1218:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3512,
                            "src": "1298:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          ],
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1290:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1290:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 59,
                      "name": "_removeMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1747,
                      "src": "1276:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1276:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1276:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1325:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 65,
                      "name": "_addMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1731,
                      "src": "1314:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 28,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3430,
                  "src": "974:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "974:11:0"
              }
            ],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "_steward",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "891:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "909:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "929:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "951:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "890:76:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "986:0:0"
            },
            "scope": 92,
            "src": "876:463:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "1436:91:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "1454:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "steward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1465:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1454:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 84,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "1502:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 85,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "1511:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 82,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2597,
                              "src": "1476:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2597_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_isApprovedOrOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2372,
                            "src": "1476:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) view returns (bool)"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1476:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1454:65:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 88,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1453:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 78,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "1446:74:0"
                }
              ]
            },
            "documentation": null,
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1373:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1390:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1372:34:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1430:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1429:6:0"
            },
            "scope": 92,
            "src": "1345:182:0",
            "stateMutability": "view",
            "superFunction": 2372,
            "visibility": "internal"
          }
        ],
        "scope": 93,
        "src": "730:799:0"
      }
    ],
    "src": "0:1530:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {
    "1": {
      "links": {},
      "events": {
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        }
      },
      "address": "0x76bc15CA184FEF534292DA7A6043071CE94061fF",
      "updated_at": 1571231385785
    },
    "5": {
      "links": {},
      "events": {
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        }
      },
      "address": "0xE60B37CA4345771D016618b60A7B4e500F9BD681",
      "updated_at": 1571229402521
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-16T13:12:16.981Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize()": {
        "details": "Constructor function."
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mintWithTokenURI(address,uint256,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}