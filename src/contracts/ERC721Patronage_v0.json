{
  "contractName": "ERC721Patronage_v0",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "steward",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_steward",
          "type": "address"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "setup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_steward\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"steward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"initialize()\":{\"details\":\"Constructor function\"},\"initialize(string,string)\":{\"details\":\"Constructor function\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mintWithTokenURI(address,uint256,string)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/jasoons/Documents/clean-code/contracts/contracts/ERC721Patronage_v0.sol\":\"ERC721Patronage_v0\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jasoons/Documents/clean-code/contracts/contracts/ERC721Patronage_v0.sol\":{\"keccak256\":\"0xf1ea08639170f86bf246288d87226dd2e1d8c4fe9ad03265454ea7624ebe781d\",\"urls\":[\"bzzr://0e368ebf9437eba125c8a4a6a546c31d3432979ac1e6d03af88248523011554e\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzzr://47885dccac32ee543284e93f21a5f62c499076b04d01b12ff67aefffbbdcbd34\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\",\"urls\":[\"bzzr://da472135eb9268d863825ea26e227a9f8980c54bd32e0764d61711acca59fc89\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x68b80bf82d12c347f9c48644c19ad1b0f23048702a5661c4dcc30f2844eec87e\",\"urls\":[\"bzzr://0052776b645ffd75c4a970b5a10b068730905c277721300dd9aee81beb5a16b8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x982e18d2e3df98e3339f70f955a4d1fb78411a29963d0ea34621759eef67e86d\",\"urls\":[\"bzzr://a5438906da44343a09c6b47666d3649f269d9d156f2109e147e21595b2284363\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x0c965fac47588d2fd480fa86602359952bc60a12112d079574a104355e412de5\",\"urls\":[\"bzzr://4ca877ed5db72bdb8e2a6885d3dd8e8f564110c639d2bd16f441d227b67a2955\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xc48ee580d20820cc0ef122b2acc9bf8836731dd8b9671cc03d21a12e3ab14976\",\"urls\":[\"bzzr://744cf3b8280d4a050ad0771e2ed0d7d41bbddfa40a541933d46bb31007a2e4a9\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x18d16e8fb4e47dcdb081284851397ab979dcdc531cd2de6a37639b2d267899fb\",\"urls\":[\"bzzr://98b1c5a12f9b6f5c44c9844b76348199241534cde1bbce93f977e0200b87a2cb\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0xe5590e5970b17dd5f54f564509b61eb8bbcabead29cb2cd3565670f48a2f9760\",\"urls\":[\"bzzr://2e884b2b4147bf81bbd04c67b6c842779e101553c18f6bc5f2409618fd732145\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x59c6ec85683ab550e17c410b76a4a83dde833f1d0acd0bb21beebe1d194cd74a\",\"urls\":[\"bzzr://1b94edd403b2f7b18bf05f8eb9dc3f03ebea55ad6707be7ae3be0f175efa19b9\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol\":{\"keccak256\":\"0xdcc6b3f84583d93ed7a2b8db57d18a03ea7c72188c724b095a6e7f7c4cd6da16\",\"urls\":[\"bzzr://baaa3ad421539e92608cacd2bd906038df41466084eafb3991af2bb2b92e18d0\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x19af40d91f2ff44aec865fa295a18efa10f5d293feed39477dca2d13e7450628\",\"urls\":[\"bzzr://8611907e2938eef10665cb0bdb0c708d05054860c991d24e6dd731bdcca21e3c\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xffc0c5550c3cdd7a4adeaf2280829181e6cf5d93aefccc6b2beb931f69feeae6\",\"urls\":[\"bzzr://09bdae31f8052296d6f112b5d02dd1f2ba270d86ceaf4606f89a309652eadea5\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x743dd23f873ebc16f752041a789f768c450fa21b0a95dde9f95ce5e88a249893\",\"urls\":[\"bzzr://f6054720ccf7f7187c6109bf45b75647fef6a15ac836905bf7680eb423cace89\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xeb8a266ef2da0aa60eea704031902ffd28b2d13dd0e8f5b69bcfb8415f2dad85\",\"urls\":[\"bzzr://393e9843d41c0652f115378cc58083c4acc4d83f7999fe22932d5e237c215d3f\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]}},\"version\":1}",
  "bytecode": "0x6080604052611fb4806100136000396000f3fe608060405234801561001057600080fd5b5060043610610190576000357c0100000000000000000000000000000000000000000000000000000000900480636352211e116100fb57806398650275116100b4578063b88d4fde1161008e578063b88d4fde14610790578063c4d66de814610856578063c87b56dd1461087c578063e985e9c51461089957610190565b80639865027514610734578063a22cb4651461073c578063aa271e1a1461076a57610190565b80636352211e146106b3578063637eea19146106d057806370a08231146106d85780638129fc1c146106fe57806395d89b4114610706578063983b2d561461070e57610190565b80632f745c591161014d5780632f745c59146103045780633aaac28e1461033057806342842e0e146104785780634cd88b76146104ae5780634f6ccce7146105db57806350bb4e7f146105f857610190565b806301ffc9a71461019557806306fdde03146101d0578063081812fc1461024d578063095ea7b31461028657806318160ddd146102b457806323b872dd146102ce575b600080fd5b6101bc600480360360208110156101ab57600080fd5b5035600160e060020a0319166108c7565b604080519115158252519081900360200190f35b6101d86108e6565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102125781810151838201526020016101fa565b50505050905090810190601f16801561023f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61026a6004803603602081101561026357600080fd5b503561097d565b60408051600160a060020a039092168252519081900360200190f35b6102b26004803603604081101561029c57600080fd5b50600160a060020a0381351690602001356109af565b005b6102bc610ae6565b60408051918252519081900360200190f35b6102b2600480360360608110156102e457600080fd5b50600160a060020a03813581169160208101359091169060400135610aec565b6102bc6004803603604081101561031a57600080fd5b50600160a060020a038135169060200135610b4d565b6102b26004803603608081101561034657600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561037157600080fd5b82018360208201111561038357600080fd5b803590602001918460018302840111640100000000831117156103a557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156103f857600080fd5b82018360208201111561040a57600080fd5b8035906020019184600183028401116401000000008311171561042c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050509035600160a060020a03169150610b9a9050565b6102b26004803603606081101561048e57600080fd5b50600160a060020a03813581169160208101359091169060400135610ca3565b6102b2600480360360408110156104c457600080fd5b8101906020810181356401000000008111156104df57600080fd5b8201836020820111156104f157600080fd5b8035906020019184600183028401116401000000008311171561051357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561056657600080fd5b82018360208201111561057857600080fd5b8035906020019184600183028401116401000000008311171561059a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610cbf945050505050565b6102bc600480360360208110156105f157600080fd5b5035610dcb565b6101bc6004803603606081101561060e57600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561063e57600080fd5b82018360208201111561065057600080fd5b8035906020019184600183028401116401000000008311171561067257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e00945050505050565b61026a600480360360208110156106c957600080fd5b5035610e70565b61026a610e9a565b6102bc600480360360208110156106ee57600080fd5b5035600160a060020a0316610eaa565b6102b2610ee2565b6101d8610fc5565b6102b26004803603602081101561072457600080fd5b5035600160a060020a0316611026565b6102b261107a565b6102b26004803603604081101561075257600080fd5b50600160a060020a038135169060200135151561108c565b6101bc6004803603602081101561078057600080fd5b5035600160a060020a031661118e565b6102b2600480360360808110156107a657600080fd5b600160a060020a038235811692602081013590911691604082013591908101906080810160608201356401000000008111156107e157600080fd5b8201836020820111156107f357600080fd5b8035906020019184600183028401116401000000008311171561081557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506111a2945050505050565b6102b26004803603602081101561086c57600080fd5b5035600160a060020a03166111ca565b6101d86004803603602081101561089257600080fd5b50356112a1565b6101bc600480360360408110156108af57600080fd5b50600160a060020a0381358116916020013516611356565b600160e060020a03191660009081526033602052604090205460ff1690565b60d28054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109725780601f1061094757610100808354040283529160200191610972565b820191906000526020600020905b81548152906001019060200180831161095557829003601f168201915b505050505090505b90565b600061098882611384565b151561099357600080fd5b50600090815260676020526040902054600160a060020a031690565b60006109ba82610e70565b9050600160a060020a038381169082161415610a0a5760405160e560020a62461bcd028152600401808060200182810382526021815260200180611f376021913960400191505060405180910390fd5b80600160a060020a0316610a1c6113a1565b600160a060020a03161480610a3d5750610a3d81610a386113a1565b611356565b1515610a7d5760405160e560020a62461bcd028152600401808060200182810382526038815260200180611ea16038913960400191505060405180910390fd5b600082815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b609e5490565b610afd610af76113a1565b826113a5565b1515610b3d5760405160e560020a62461bcd028152600401808060200182810382526031815260200180611f586031913960400191505060405180910390fd5b610b488383836113d1565b505050565b6000610b5883610eaa565b8210610b6357600080fd5b600160a060020a0383166000908152609c60205260409020805483908110610b8757fe5b9060005260206000200154905092915050565b600054610100900460ff1680610bb35750610bb36113f0565b80610bc1575060005460ff16155b1515610c015760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff16158015610c2c576000805460ff1961ff0019909116610100171660011790555b61016c805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038716179055610c5d6113f6565b610c65610ee2565b610c6f8484610cbf565b610c78306111ca565b610c81306114b9565b610c8a82611502565b8015610c9c576000805461ff00191690555b5050505050565b610b4883838360206040519081016040528060008152506111a2565b600054610100900460ff1680610cd85750610cd86113f0565b80610ce6575060005460ff16155b1515610d265760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff16158015610d51576000805460ff1961ff0019909116610100171660011790555b610d5961154b565b1515610d6457600080fd5b8251610d779060d2906020860190611de8565b508151610d8b9060d3906020850190611de8565b50610db57f5b5e139f0000000000000000000000000000000000000000000000000000000061157b565b8015610b48576000805461ff0019169055505050565b6000610dd5610ae6565b8210610de057600080fd5b609e805483908110610dee57fe5b90600052602060002001549050919050565b6000610e12610e0d6113a1565b61118e565b1515610e525760405160e560020a62461bcd028152600401808060200182810382526030815260200180611ed96030913960400191505060405180910390fd5b610e5c84846115b7565b610e6683836115d4565b5060019392505050565b600081815260666020526040812054600160a060020a0316801515610e9457600080fd5b92915050565b61016c54600160a060020a031681565b6000600160a060020a0382161515610ec157600080fd5b600160a060020a0382166000908152606860205260409020610e9490611607565b600054610100900460ff1680610efb5750610efb6113f0565b80610f09575060005460ff16155b1515610f495760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff16158015610f74576000805460ff1961ff0019909116610100171660011790555b610f7c61154b565b1515610f8757600080fd5b610fb07f780e9d630000000000000000000000000000000000000000000000000000000061157b565b8015610fc2576000805461ff00191690555b50565b60d38054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109725780601f1061094757610100808354040283529160200191610972565b611031610e0d6113a1565b15156110715760405160e560020a62461bcd028152600401808060200182810382526030815260200180611ed96030913960400191505060405180910390fd5b610fc281611502565b61108a6110856113a1565b6114b9565b565b6110946113a1565b600160a060020a03838116911614156110f7576040805160e560020a62461bcd02815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b80606960006111046113a1565b600160a060020a03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556111486113a1565b6040805184151581529051600160a060020a0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6000610e946101078363ffffffff61160b16565b6111ad848484610aec565b6111b984848484611642565b15156111c457600080fd5b50505050565b600054610100900460ff16806111e357506111e36113f0565b806111f1575060005460ff16155b15156112315760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff1615801561125c576000805460ff1961ff0019909116610100171660011790555b61126461154b565b151561126f57600080fd5b6112776117d1565b151561128257600080fd5b61128b826117fc565b801561129d576000805461ff00191690555b5050565b60606112ac82611384565b15156112b757600080fd5b600082815260d4602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909183018282801561134a5780601f1061131f5761010080835404028352916020019161134a565b820191906000526020600020905b81548152906001019060200180831161132d57829003601f168201915b50505050509050919050565b600160a060020a03918216600090815260696020908152604080832093909416825291909152205460ff1690565b600090815260666020526040902054600160a060020a0316151590565b3390565b61016c54600090600160a060020a03848116911614806113ca57506113ca83836118a6565b9392505050565b6113dc8383836118fd565b6113e683826119ec565b610b488282611adc565b303b1590565b600054610100900460ff168061140f575061140f6113f0565b8061141d575060005460ff16155b151561145d5760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff16158015611488576000805460ff1961ff0019909116610100171660011790555b611490611b1a565b610fb07f80ac58cd0000000000000000000000000000000000000000000000000000000061157b565b6114cb6101078263ffffffff611bd516565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6115146101078263ffffffff611c2116565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60006115767f80ac58cd000000000000000000000000000000000000000000000000000000006108c7565b905090565b600160e060020a0319808216141561159257600080fd5b600160e060020a0319166000908152603360205260409020805460ff19166001179055565b6115c18282611c6f565b6115cb8282611adc565b61129d81611d1f565b6115dd82611384565b15156115e857600080fd5b600082815260d4602090815260409091208251610b4892840190611de8565b5490565b6000600160a060020a038216151561162257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600061165684600160a060020a0316611d63565b1515611664575060016117c9565b600084600160a060020a031663150b7a0261167d6113a1565b8887876040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561171e578181015183820152602001611706565b50505050905090810190601f16801561174b5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561176d57600080fd5b505af1158015611781573d6000803e3d6000fd5b505050506040513d602081101561179757600080fd5b5051600160e060020a0319167f150b7a0200000000000000000000000000000000000000000000000000000000149150505b949350505050565b60006115767f5b5e139f000000000000000000000000000000000000000000000000000000006108c7565b600054610100900460ff168061181557506118156113f0565b80611823575060005460ff16155b15156118635760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff1615801561188e576000805460ff1961ff0019909116610100171660011790555b6118978261118e565b151561128b5761128b82611502565b6000806118b283610e70565b905080600160a060020a031684600160a060020a031614806118ed575083600160a060020a03166118e28461097d565b600160a060020a0316145b806117c957506117c98185611356565b82600160a060020a031661191082610e70565b600160a060020a03161461192357600080fd5b600160a060020a038216151561193857600080fd5b61194181611d6b565b600160a060020a038316600090815260686020526040902061196290611db3565b600160a060020a038216600090815260686020526040902061198390611dca565b600081815260666020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600160a060020a0382166000908152609c6020526040812054611a1690600163ffffffff611dd316565b6000838152609d6020526040902054909150808214611ab357600160a060020a0384166000908152609c60205260408120805484908110611a5357fe5b9060005260206000200154905080609c600087600160a060020a0316600160a060020a0316815260200190815260200160002083815481101515611a9357fe5b6000918252602080832090910192909255918252609d9052604090208190555b600160a060020a0384166000908152609c60205260409020805490610c9c906000198301611e66565b600160a060020a039091166000908152609c602081815260408084208054868652609d84529185208290559282526001810183559183529091200155565b600054610100900460ff1680611b335750611b336113f0565b80611b41575060005460ff16155b1515611b815760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff16158015611bac576000805460ff1961ff0019909116610100171660011790555b610fb07f01ffc9a70000000000000000000000000000000000000000000000000000000061157b565b600160a060020a0381161515611bea57600080fd5b611bf4828261160b565b1515611bff57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b600160a060020a0381161515611c3657600080fd5b611c40828261160b565b15611c4a57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0382161515611c8457600080fd5b611c8d81611384565b15611c9757600080fd5b6000818152606660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038716908117909155835260689091529020611ce390611dca565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b609e80546000838152609f60205260408120829055600182018355919091527fcfe2a20ff701a1f3e14f63bd70d6c6bc6fba8172ec6d5a505cdab3927c0a9de60155565b6000903b1190565b600081815260676020526040902054600160a060020a031615610fc2576000908152606760205260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b8054611dc690600163ffffffff611dd316565b9055565b80546001019055565b600082821115611de257600080fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611e2957805160ff1916838001178555611e56565b82800160010185558215611e56579182015b82811115611e56578251825591602001919060010190611e3b565b50611e62929150611e86565b5090565b815481835581811115610b4857600083815260209020610b489181019083015b61097a91905b80821115611e625760008155600101611e8c56fe4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a165627a7a72305820f3e8ee7a8431cd4e89fac209549081b7f1ceea9f324f1139994d0af6ccff6a840029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610190576000357c0100000000000000000000000000000000000000000000000000000000900480636352211e116100fb57806398650275116100b4578063b88d4fde1161008e578063b88d4fde14610790578063c4d66de814610856578063c87b56dd1461087c578063e985e9c51461089957610190565b80639865027514610734578063a22cb4651461073c578063aa271e1a1461076a57610190565b80636352211e146106b3578063637eea19146106d057806370a08231146106d85780638129fc1c146106fe57806395d89b4114610706578063983b2d561461070e57610190565b80632f745c591161014d5780632f745c59146103045780633aaac28e1461033057806342842e0e146104785780634cd88b76146104ae5780634f6ccce7146105db57806350bb4e7f146105f857610190565b806301ffc9a71461019557806306fdde03146101d0578063081812fc1461024d578063095ea7b31461028657806318160ddd146102b457806323b872dd146102ce575b600080fd5b6101bc600480360360208110156101ab57600080fd5b5035600160e060020a0319166108c7565b604080519115158252519081900360200190f35b6101d86108e6565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102125781810151838201526020016101fa565b50505050905090810190601f16801561023f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61026a6004803603602081101561026357600080fd5b503561097d565b60408051600160a060020a039092168252519081900360200190f35b6102b26004803603604081101561029c57600080fd5b50600160a060020a0381351690602001356109af565b005b6102bc610ae6565b60408051918252519081900360200190f35b6102b2600480360360608110156102e457600080fd5b50600160a060020a03813581169160208101359091169060400135610aec565b6102bc6004803603604081101561031a57600080fd5b50600160a060020a038135169060200135610b4d565b6102b26004803603608081101561034657600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561037157600080fd5b82018360208201111561038357600080fd5b803590602001918460018302840111640100000000831117156103a557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156103f857600080fd5b82018360208201111561040a57600080fd5b8035906020019184600183028401116401000000008311171561042c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050509035600160a060020a03169150610b9a9050565b6102b26004803603606081101561048e57600080fd5b50600160a060020a03813581169160208101359091169060400135610ca3565b6102b2600480360360408110156104c457600080fd5b8101906020810181356401000000008111156104df57600080fd5b8201836020820111156104f157600080fd5b8035906020019184600183028401116401000000008311171561051357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561056657600080fd5b82018360208201111561057857600080fd5b8035906020019184600183028401116401000000008311171561059a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610cbf945050505050565b6102bc600480360360208110156105f157600080fd5b5035610dcb565b6101bc6004803603606081101561060e57600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561063e57600080fd5b82018360208201111561065057600080fd5b8035906020019184600183028401116401000000008311171561067257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e00945050505050565b61026a600480360360208110156106c957600080fd5b5035610e70565b61026a610e9a565b6102bc600480360360208110156106ee57600080fd5b5035600160a060020a0316610eaa565b6102b2610ee2565b6101d8610fc5565b6102b26004803603602081101561072457600080fd5b5035600160a060020a0316611026565b6102b261107a565b6102b26004803603604081101561075257600080fd5b50600160a060020a038135169060200135151561108c565b6101bc6004803603602081101561078057600080fd5b5035600160a060020a031661118e565b6102b2600480360360808110156107a657600080fd5b600160a060020a038235811692602081013590911691604082013591908101906080810160608201356401000000008111156107e157600080fd5b8201836020820111156107f357600080fd5b8035906020019184600183028401116401000000008311171561081557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506111a2945050505050565b6102b26004803603602081101561086c57600080fd5b5035600160a060020a03166111ca565b6101d86004803603602081101561089257600080fd5b50356112a1565b6101bc600480360360408110156108af57600080fd5b50600160a060020a0381358116916020013516611356565b600160e060020a03191660009081526033602052604090205460ff1690565b60d28054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109725780601f1061094757610100808354040283529160200191610972565b820191906000526020600020905b81548152906001019060200180831161095557829003601f168201915b505050505090505b90565b600061098882611384565b151561099357600080fd5b50600090815260676020526040902054600160a060020a031690565b60006109ba82610e70565b9050600160a060020a038381169082161415610a0a5760405160e560020a62461bcd028152600401808060200182810382526021815260200180611f376021913960400191505060405180910390fd5b80600160a060020a0316610a1c6113a1565b600160a060020a03161480610a3d5750610a3d81610a386113a1565b611356565b1515610a7d5760405160e560020a62461bcd028152600401808060200182810382526038815260200180611ea16038913960400191505060405180910390fd5b600082815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b609e5490565b610afd610af76113a1565b826113a5565b1515610b3d5760405160e560020a62461bcd028152600401808060200182810382526031815260200180611f586031913960400191505060405180910390fd5b610b488383836113d1565b505050565b6000610b5883610eaa565b8210610b6357600080fd5b600160a060020a0383166000908152609c60205260409020805483908110610b8757fe5b9060005260206000200154905092915050565b600054610100900460ff1680610bb35750610bb36113f0565b80610bc1575060005460ff16155b1515610c015760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff16158015610c2c576000805460ff1961ff0019909116610100171660011790555b61016c805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038716179055610c5d6113f6565b610c65610ee2565b610c6f8484610cbf565b610c78306111ca565b610c81306114b9565b610c8a82611502565b8015610c9c576000805461ff00191690555b5050505050565b610b4883838360206040519081016040528060008152506111a2565b600054610100900460ff1680610cd85750610cd86113f0565b80610ce6575060005460ff16155b1515610d265760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff16158015610d51576000805460ff1961ff0019909116610100171660011790555b610d5961154b565b1515610d6457600080fd5b8251610d779060d2906020860190611de8565b508151610d8b9060d3906020850190611de8565b50610db57f5b5e139f0000000000000000000000000000000000000000000000000000000061157b565b8015610b48576000805461ff0019169055505050565b6000610dd5610ae6565b8210610de057600080fd5b609e805483908110610dee57fe5b90600052602060002001549050919050565b6000610e12610e0d6113a1565b61118e565b1515610e525760405160e560020a62461bcd028152600401808060200182810382526030815260200180611ed96030913960400191505060405180910390fd5b610e5c84846115b7565b610e6683836115d4565b5060019392505050565b600081815260666020526040812054600160a060020a0316801515610e9457600080fd5b92915050565b61016c54600160a060020a031681565b6000600160a060020a0382161515610ec157600080fd5b600160a060020a0382166000908152606860205260409020610e9490611607565b600054610100900460ff1680610efb5750610efb6113f0565b80610f09575060005460ff16155b1515610f495760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff16158015610f74576000805460ff1961ff0019909116610100171660011790555b610f7c61154b565b1515610f8757600080fd5b610fb07f780e9d630000000000000000000000000000000000000000000000000000000061157b565b8015610fc2576000805461ff00191690555b50565b60d38054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109725780601f1061094757610100808354040283529160200191610972565b611031610e0d6113a1565b15156110715760405160e560020a62461bcd028152600401808060200182810382526030815260200180611ed96030913960400191505060405180910390fd5b610fc281611502565b61108a6110856113a1565b6114b9565b565b6110946113a1565b600160a060020a03838116911614156110f7576040805160e560020a62461bcd02815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b80606960006111046113a1565b600160a060020a03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556111486113a1565b6040805184151581529051600160a060020a0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6000610e946101078363ffffffff61160b16565b6111ad848484610aec565b6111b984848484611642565b15156111c457600080fd5b50505050565b600054610100900460ff16806111e357506111e36113f0565b806111f1575060005460ff16155b15156112315760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff1615801561125c576000805460ff1961ff0019909116610100171660011790555b61126461154b565b151561126f57600080fd5b6112776117d1565b151561128257600080fd5b61128b826117fc565b801561129d576000805461ff00191690555b5050565b60606112ac82611384565b15156112b757600080fd5b600082815260d4602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909183018282801561134a5780601f1061131f5761010080835404028352916020019161134a565b820191906000526020600020905b81548152906001019060200180831161132d57829003601f168201915b50505050509050919050565b600160a060020a03918216600090815260696020908152604080832093909416825291909152205460ff1690565b600090815260666020526040902054600160a060020a0316151590565b3390565b61016c54600090600160a060020a03848116911614806113ca57506113ca83836118a6565b9392505050565b6113dc8383836118fd565b6113e683826119ec565b610b488282611adc565b303b1590565b600054610100900460ff168061140f575061140f6113f0565b8061141d575060005460ff16155b151561145d5760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff16158015611488576000805460ff1961ff0019909116610100171660011790555b611490611b1a565b610fb07f80ac58cd0000000000000000000000000000000000000000000000000000000061157b565b6114cb6101078263ffffffff611bd516565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6115146101078263ffffffff611c2116565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60006115767f80ac58cd000000000000000000000000000000000000000000000000000000006108c7565b905090565b600160e060020a0319808216141561159257600080fd5b600160e060020a0319166000908152603360205260409020805460ff19166001179055565b6115c18282611c6f565b6115cb8282611adc565b61129d81611d1f565b6115dd82611384565b15156115e857600080fd5b600082815260d4602090815260409091208251610b4892840190611de8565b5490565b6000600160a060020a038216151561162257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600061165684600160a060020a0316611d63565b1515611664575060016117c9565b600084600160a060020a031663150b7a0261167d6113a1565b8887876040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561171e578181015183820152602001611706565b50505050905090810190601f16801561174b5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561176d57600080fd5b505af1158015611781573d6000803e3d6000fd5b505050506040513d602081101561179757600080fd5b5051600160e060020a0319167f150b7a0200000000000000000000000000000000000000000000000000000000149150505b949350505050565b60006115767f5b5e139f000000000000000000000000000000000000000000000000000000006108c7565b600054610100900460ff168061181557506118156113f0565b80611823575060005460ff16155b15156118635760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff1615801561188e576000805460ff1961ff0019909116610100171660011790555b6118978261118e565b151561128b5761128b82611502565b6000806118b283610e70565b905080600160a060020a031684600160a060020a031614806118ed575083600160a060020a03166118e28461097d565b600160a060020a0316145b806117c957506117c98185611356565b82600160a060020a031661191082610e70565b600160a060020a03161461192357600080fd5b600160a060020a038216151561193857600080fd5b61194181611d6b565b600160a060020a038316600090815260686020526040902061196290611db3565b600160a060020a038216600090815260686020526040902061198390611dca565b600081815260666020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600160a060020a0382166000908152609c6020526040812054611a1690600163ffffffff611dd316565b6000838152609d6020526040902054909150808214611ab357600160a060020a0384166000908152609c60205260408120805484908110611a5357fe5b9060005260206000200154905080609c600087600160a060020a0316600160a060020a0316815260200190815260200160002083815481101515611a9357fe5b6000918252602080832090910192909255918252609d9052604090208190555b600160a060020a0384166000908152609c60205260409020805490610c9c906000198301611e66565b600160a060020a039091166000908152609c602081815260408084208054868652609d84529185208290559282526001810183559183529091200155565b600054610100900460ff1680611b335750611b336113f0565b80611b41575060005460ff16155b1515611b815760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611f09602e913960400191505060405180910390fd5b600054610100900460ff16158015611bac576000805460ff1961ff0019909116610100171660011790555b610fb07f01ffc9a70000000000000000000000000000000000000000000000000000000061157b565b600160a060020a0381161515611bea57600080fd5b611bf4828261160b565b1515611bff57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b600160a060020a0381161515611c3657600080fd5b611c40828261160b565b15611c4a57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0382161515611c8457600080fd5b611c8d81611384565b15611c9757600080fd5b6000818152606660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038716908117909155835260689091529020611ce390611dca565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b609e80546000838152609f60205260408120829055600182018355919091527fcfe2a20ff701a1f3e14f63bd70d6c6bc6fba8172ec6d5a505cdab3927c0a9de60155565b6000903b1190565b600081815260676020526040902054600160a060020a031615610fc2576000908152606760205260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b8054611dc690600163ffffffff611dd316565b9055565b80546001019055565b600082821115611de257600080fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611e2957805160ff1916838001178555611e56565b82800160010185558215611e56579182015b82811115611e56578251825591602001919060010190611e3b565b50611e62929150611e86565b5090565b815481835581811115610b4857600083815260209020610b489181019083015b61097a91905b80821115611e625760008155600101611e8c56fe4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a165627a7a72305820f3e8ee7a8431cd4e89fac209549081b7f1ceea9f324f1139994d0af6ccff6a840029",
  "sourceMap": "730:799:0:-;;;;;;;;;",
  "deployedSourceMap": "730:799:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;730:799:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:131:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;870:131:7;-1:-1:-1;;;;;;870:131:7;;:::i;:::-;;;;;;;;;;;;;;;;;;1346:83:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1346:83:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4192:151:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4192:151:10;;:::i;:::-;;;;-1:-1:-1;;;;;4192:151:10;;;;;;;;;;;;;;3492:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3492:415:10;;;;;;;;:::i;:::-;;2316:94:11;;;:::i;:::-;;;;;;;;;;;;;;;;5784:287:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5784:287:10;;;;;;;;;;;;;;;;;:::i;1982:182:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1982:182:11;;;;;;;;:::i;876:463:0:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;876:463:0;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;876:463:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;876:463:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;876:463:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;876:463:0;;;;;;;;-1:-1:-1;876:463:0;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;876:463:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;876:463:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;876:463:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;876:463:0;;-1:-1:-1;;;876:463:0;;-1:-1:-1;;;;;876:463:0;;-1:-1:-1;876:463:0;;-1:-1:-1;876:463:0:i;6704:132:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6704:132:10;;;;;;;;;;;;;;;;;:::i;783:321:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;783:321:12;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;783:321:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;783:321:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;783:321:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;783:321:12;;;;;;;;-1:-1:-1;783:321:12;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;783:321:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;783:321:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;783:321:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;783:321:12;;-1:-1:-1;783:321:12;;-1:-1:-1;;;;;783:321:12:i;2747:148:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2747:148:11;;:::i;840:209:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;840:209:13;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;840:209:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;840:209:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;840:209:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;840:209:13;;-1:-1:-1;840:209:13;;-1:-1:-1;;;;;840:209:13:i;2894:177:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2894:177:10;;:::i;847:22:0:-;;;:::i;2516:160:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2516:160:10;-1:-1:-1;;;;;2516:160:10;;:::i;1227:242:11:-;;;:::i;1537:87:12:-;;;:::i;756:90:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;756:90:5;-1:-1:-1;;;;;756:90:5;;:::i;852:77::-;;;:::i;4635:249:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4635:249:10;;;;;;;;;;:::i;643:107:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;643:107:5;-1:-1:-1;;;;;643:107:5;;:::i;7543:211:10:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7543:211:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7543:211:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7543:211:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7543:211:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7543:211:10;;-1:-1:-1;7543:211:10;;-1:-1:-1;;;;;7543:211:10:i;338:203:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;338:203:13;-1:-1:-1;;;;;338:203:13;;:::i;1823:151:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1823:151:12;;:::i;5205:145:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5205:145:10;;;;;;;;;;:::i;870:131:7:-;-1:-1:-1;;;;;;961:33:7;938:4;961:33;;;:20;:33;;;;;;;;;870:131::o;1346:83:12:-;1417:5;1410:12;;;;;;;;-1:-1:-1;;1410:12:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:13;;1410:12;;1417:5;;1410:12;;1417:5;1410:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1346:83;;:::o;4192:151:10:-;4251:7;4278:16;4286:7;4278;:16::i;:::-;4270:25;;;;;;;;-1:-1:-1;4312:24:10;;;;:15;:24;;;;;;-1:-1:-1;;;;;4312:24:10;;4192:151::o;3492:415::-;3555:13;3571:16;3579:7;3571;:16::i;:::-;3555:32;-1:-1:-1;;;;;;3605:11:10;;;;;;;;3597:57;;;;-1:-1:-1;;;;;3597:57:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3689:5;-1:-1:-1;;;;;3673:21:10;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3673:21:10;;:62;;;;3698:37;3715:5;3722:12;:10;:12::i;:::-;3698:16;:37::i;:::-;3665:152;;;;;;-1:-1:-1;;;;;3665:152:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3828:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;3828:29:10;-1:-1:-1;;;;;3828:29:10;;;;;;;;;3872:28;;3828:24;;3872:28;;;;;;;3492:415;;;:::o;2316:94:11:-;2386:10;:17;2316:94;:::o;5784:287:10:-;5926:41;5945:12;:10;:12::i;:::-;5959:7;5926:18;:41::i;:::-;5918:103;;;;;;-1:-1:-1;;;;;5918:103:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6032:32;6046:4;6052:2;6056:7;6032:13;:32::i;:::-;5784:287;;;:::o;1982:182:11:-;2062:7;2097:16;2107:5;2097:9;:16::i;:::-;2089:24;;2081:33;;;;;;-1:-1:-1;;;;;2131:19:11;;;;;;:12;:19;;;;;:26;;2151:5;;2131:26;;;;;;;;;;;;;;2124:33;;1982:182;;;;:::o;876:463:0:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;996:7:0;:18;;-1:-1:-1;;996:18:0;-1:-1:-1;;;;;996:18:0;;;;;1024:19;:17;:19::i;:::-;1053:29;:27;:29::i;:::-;1092:39;1118:4;1124:6;1092:25;:39::i;:::-;1218:48;1260:4;1218:33;:48::i;:::-;1276:28;1298:4;1276:13;:28::i;:::-;1314:18;1325:6;1314:10;:18::i;:::-;1268:14:19;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:19;;;1264:55;876:463:0;;;;;:::o;6704:132:10:-;6790:39;6807:4;6813:2;6817:7;6790:39;;;;;;;;;;;;;:16;:39::i;783:321:12:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;882:28:12;:26;:28::i;:::-;874:37;;;;;;;;922:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;944:16:12;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1048:49:12;1067:29;1048:18;:49::i;:::-;1268:14:19;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:19;;;783:321:12;;;:::o;2747:148:11:-;2805:7;2840:13;:11;:13::i;:::-;2832:21;;2824:30;;;;;;2871:10;:17;;2882:5;;2871:17;;;;;;;;;;;;;;2864:24;;2747:148;;;:::o;840:209:13:-;946:4;544:22:5;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;-1:-1:-1;;;;;536:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:18:13;968:2;972:7;962:5;:18::i;:::-;990:31;1003:7;1012:8;990:12;:31::i;:::-;-1:-1:-1;1038:4:13;840:209;;;;;:::o;2894:177:10:-;2949:7;2984:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2984:20:10;3022:19;;;3014:28;;;;;;3059:5;2894:177;-1:-1:-1;;2894:177:10:o;847:22:0:-;;;-1:-1:-1;;;;;847:22:0;;:::o;2516:160:10:-;2571:7;-1:-1:-1;;;;;2598:19:10;;;;2590:28;;;;;;-1:-1:-1;;;;;2635:24:10;;;;;;:17;:24;;;;;:34;;:32;:34::i;1227:242:11:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;1286:28:11;:26;:28::i;:::-;1278:37;;;;;;;;1411:51;1430:31;1411:18;:51::i;:::-;1268:14:19;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:19;;;1264:55;1227:242:11;:::o;1537:87:12:-;1610:7;1603:14;;;;;;;;-1:-1:-1;;1603:14:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1578:13;;1603:14;;1610:7;;1603:14;;1610:7;1603:14;;;;;;;;;;;;;;;;;;;;;;;;756:90:5;544:22;553:12;:10;:12::i;544:22::-;536:83;;;;;;-1:-1:-1;;;;;536:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;4635:249:10:-;4720:12;:10;:12::i;:::-;-1:-1:-1;;;;;4714:18:10;;;;;;;4706:56;;;;;-1:-1:-1;;;;;4706:56:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;4812:8;4773:18;:32;4792:12;:10;:12::i;:::-;-1:-1:-1;;;;;4773:32:10;;;;;;;;;;;;;;;;;-1:-1:-1;4773:32:10;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;4773:47:10;;;;;;;;;;;4850:12;:10;:12::i;:::-;4835:42;;;;;;;;;;-1:-1:-1;;;;;4835:42:10;;;;;;;;;;;;;;4635:249;;:::o;643:107:5:-;699:4;722:21;:8;735:7;722:21;:12;:21;:::i;7543:211:10:-;7649:31;7662:4;7668:2;7672:7;7649:12;:31::i;:::-;7698:48;7721:4;7727:2;7731:7;7740:5;7698:22;:48::i;:::-;7690:57;;;;;;;;7543:211;;;;:::o;338:203:13:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;411:28:13;:26;:28::i;:::-;403:37;;;;;;;;458:36;:34;:36::i;:::-;450:45;;;;;;;;505:29;527:6;505:21;:29::i;:::-;1268:14:19;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:19;;;1264:55;338:203:13;;:::o;1823:151:12:-;1881:13;1914:16;1922:7;1914;:16::i;:::-;1906:25;;;;;;;;1948:19;;;;:10;:19;;;;;;;;;1941:26;;;;;;-1:-1:-1;;1941:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1948:19;;1941:26;;1948:19;1941:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:151;;;:::o;5205:145:10:-;-1:-1:-1;;;;;5308:25:10;;;5285:4;5308:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5205:145::o;7948:152::-;8005:4;8037:20;;;:11;:20;;;;;;-1:-1:-1;;;;;8037:20:10;8074:19;;;7948:152::o;791:88:3:-;862:10;791:88;:::o;1345:182:0:-;1465:7;;1430:4;;-1:-1:-1;;;;;1454:18:0;;;1465:7;;1454:18;;:65;;;1476:43;1502:7;1511;1476:25;:43::i;:::-;1446:74;1345:182;-1:-1:-1;;;1345:182:0:o;3270:239:11:-;3355:38;3375:4;3381:2;3385:7;3355:19;:38::i;:::-;3404:47;3437:4;3443:7;3404:32;:47::i;:::-;3462:40;3490:2;3494:7;3462:27;:40::i;1409:467:19:-;1842:7;1830:20;1864:7;1409:467;:::o;1979:205:10:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;2030:19:10;:17;:19::i;:::-;2137:40;2156:20;2137:18;:40::i;1060:127:5:-;1119:24;:8;1135:7;1119:24;:15;:24;:::i;:::-;1158:22;;-1:-1:-1;;;;;1158:22:5;;;;;;;;1060:127;:::o;935:119::-;991:21;:8;1004:7;991:21;:12;:21;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:5;;;;;;;;935:119;:::o;2190:123:10:-;2244:4;2267:39;2285:20;2267:17;:39::i;:::-;2260:46;;2190:123;:::o;1080:158:7:-;-1:-1:-1;;;;;;1155:25:7;;;;;1147:34;;;;;;-1:-1:-1;;;;;;1191:33:7;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1191:40:7;1227:4;1191:40;;;1080:158::o;3764:196:11:-;3827:24;3839:2;3843:7;3827:11;:24::i;:::-;3862:40;3890:2;3894:7;3862:27;:40::i;:::-;3913;3945:7;3913:31;:40::i;2211:144:12:-;2296:16;2304:7;2296;:16::i;:::-;2288:25;;;;;;;;2323:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;1062:112:6:-;1153:14;;1062:112::o;786:162:4:-;858:4;-1:-1:-1;;;;;882:21:4;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:4;:11;:20;;;;;;;;;;;;;;;786:162::o;11298:349:10:-;11419:4;11444:15;:2;-1:-1:-1;;;;;11444:13:10;;:15::i;:::-;11443:16;11439:58;;;-1:-1:-1;11482:4:10;11475:11;;11439:58;11507:13;11539:2;-1:-1:-1;;;;;11523:36:10;;11560:12;:10;:12::i;:::-;11574:4;11580:7;11589:5;11523:72;;;;;;;;;;;;;-1:-1:-1;;;;;11523:72:10;-1:-1:-1;;;;;11523:72:10;;;;;;-1:-1:-1;;;;;11523:72:10;-1:-1:-1;;;;;11523:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11523:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11523:72:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11523:72:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11523:72:10;-1:-1:-1;;;;;;11613:26:10;11623:16;11613:26;;-1:-1:-1;;11298:349:10;;;;;;;:::o;1110:132:12:-;1164:4;1187:48;1205:29;1187:17;:48::i;361:137:5:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:5;440:6;431:8;:16::i;:::-;430:17;426:66;;;463:18;474:6;463:10;:18::i;8460:246:10:-;8545:4;8561:13;8577:16;8585:7;8577;:16::i;:::-;8561:32;;8622:5;-1:-1:-1;;;;;8611:16:10;:7;-1:-1:-1;;;;;8611:16:10;;:51;;;;8655:7;-1:-1:-1;;;;;8631:31:10;:20;8643:7;8631:11;:20::i;:::-;-1:-1:-1;;;;;8631:31:10;;8611:51;:87;;;;8666:32;8683:5;8690:7;8666:16;:32::i;10408:362::-;10521:4;-1:-1:-1;;;;;10501:24:10;:16;10509:7;10501;:16::i;:::-;-1:-1:-1;;;;;10501:24:10;;10493:33;;;;;;-1:-1:-1;;;;;10544:16:10;;;;10536:25;;;;;;10572:23;10587:7;10572:14;:23::i;:::-;-1:-1:-1;;;;;10606:23:10;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;10651:21:10;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;10695:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;10695:25:10;-1:-1:-1;;;;;10695:25:10;;;;;;;;;10736:27;;10695:20;;10736:27;;;;;;;10408:362;;;:::o;6372:1128:11:-;-1:-1:-1;;;;;6659:18:11;;6634:22;6659:18;;;:12;:18;;;;;:25;:32;;6689:1;6659:32;:29;:32;:::i;:::-;6701:18;6722:26;;;:17;:26;;;;;;6634:57;;-1:-1:-1;6852:28:11;;;6848:323;;-1:-1:-1;;;;;6918:18:11;;6896:19;6918:18;;;:12;:18;;;;;:34;;6937:14;;6918:34;;;;;;;;;;;;;;6896:56;;7000:11;6967:12;:18;6980:4;-1:-1:-1;;;;;6967:18:11;-1:-1:-1;;;;;6967:18:11;;;;;;;;;;;;6986:10;6967:30;;;;;;;;;;;;;;;;;;;;;:44;;;;7083:30;;;:17;:30;;;;;:43;;;6848:323;-1:-1:-1;;;;;7257:18:11;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;7257:27:11;;;:::i;5218:183::-;-1:-1:-1;;;;;5331:16:11;;;;;;;:12;:16;;;;;;;;:23;;5302:26;;;:17;:26;;;;;:52;;;5364:16;;;39:1:-1;23:18;;45:23;;5364:30:11;;;;;;;;5218:183::o;681:98:7:-;1024:12:19;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:19;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:19;;;;;1225:18;1213:4;1225:18;;;1170:80;732:40:7;751:20;732:18;:40::i;514:184:4:-;-1:-1:-1;;;;;593:21:4;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:4;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:4;;;514:184::o;259:181::-;-1:-1:-1;;;;;335:21:4;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:4;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:4;429:4;406:27;;;259:181::o;8949:259:10:-;-1:-1:-1;;;;;9020:16:10;;;;9012:25;;;;;;9056:16;9064:7;9056;:16::i;:::-;9055:17;9047:26;;;;;;9084:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;9084:25:10;-1:-1:-1;;;;;9084:25:10;;;;;;;;9119:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;9168;;9193:7;;-1:-1:-1;;;;;9168:33:10;;;9185:1;;9168:33;;9185:1;;9168:33;8949:259;;:::o;5596:161:11:-;5699:10;:17;;5672:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5726:24:11;;;;;;;5596:161::o;463:616:18:-;523:4;1026:20;;1064:8;;463:616::o;11808:171:10:-;11907:1;11871:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11871:24:10;:38;11867:106;;11960:1;11925:24;;;:15;:24;;;;;:37;;-1:-1:-1;;11925:37:10;;;11808:171::o;1275:108:6:-;1355:14;;:21;;1374:1;1355:21;:18;:21;:::i;:::-;1338:38;;1275:108::o;1180:89::-;1243:19;;1261:1;1243:19;;;1180:89::o;1211:145:9:-;1269:7;1296:6;;;;1288:15;;;;;;-1:-1:-1;1325:5:9;;;1211:145::o;730:799:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;730:799:0;;;-1:-1:-1;730:799:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol\";\n// import \"../node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\";\n// import \"../node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol\";\n// import \"../node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\";\n\ncontract ERC721Patronage_v0 is Initializable, ERC721, ERC721Enumerable, ERC721Metadata, ERC721MetadataMintable {\n    address public steward;\n\n    function setup(address _steward, string memory name, string memory symbol, address minter) public initializer {\n        steward = _steward;\n        ERC721.initialize();\n        ERC721Enumerable.initialize();\n        ERC721Metadata.initialize(name, symbol);\n                // Initialize the minter and pauser roles, and renounce them\n        ERC721MetadataMintable.initialize(address(this));\n        _removeMinter(address(this));\n        _addMinter(minter);\n    }\n\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view returns (bool) {\n        return (spender == steward || ERC721._isApprovedOrOwner(spender, tokenId));\n    }\n}\n",
  "sourcePath": "/home/jasoons/Documents/clean-code/contracts/contracts/ERC721Patronage_v0.sol",
  "ast": {
    "absolutePath": "/home/jasoons/Documents/clean-code/contracts/contracts/ERC721Patronage_v0.sol",
    "exportedSymbols": {
      "ERC721Patronage_v0": [
        92
      ]
    },
    "id": 93,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 2493,
        "src": "25:84:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 2856,
        "src": "110:94:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 3011,
        "src": "205:92:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 3081,
        "src": "298:100:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3340,
              "src": "761:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3340",
                "typeString": "contract Initializable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "761:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2492,
              "src": "776:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2492",
                "typeString": "contract ERC721"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "776:6:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2855,
              "src": "784:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$2855",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "784:16:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3010,
              "src": "802:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$3010",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "802:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3080,
              "src": "818:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$3080",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "818:22:0"
          }
        ],
        "contractDependencies": [
          1452,
          1669,
          1778,
          1788,
          2492,
          2855,
          3010,
          3080,
          3186,
          3216,
          3242,
          3340
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 92,
        "linearizedBaseContracts": [
          92,
          3080,
          1669,
          3010,
          3242,
          2855,
          3216,
          2492,
          3186,
          1778,
          1788,
          1452,
          3340
        ],
        "name": "ERC721Patronage_v0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 17,
            "name": "steward",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "847:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "847:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "986:353:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "steward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "996:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 31,
                      "name": "_steward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1006:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "996:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "996:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2492,
                        "src": "1024:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2492_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1982,
                      "src": "1024:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1024:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2855,
                        "src": "1053:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$2855_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2544,
                      "src": "1053:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1118:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1124:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 44,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3010,
                        "src": "1092:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$3010_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2911,
                      "src": "1092:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 55,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3403,
                            "src": "1260:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          ],
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1252:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1252:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "ERC721MetadataMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3080,
                        "src": "1218:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$3080_$",
                          "typeString": "type(contract ERC721MetadataMintable)"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3049,
                      "src": "1218:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1218:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3403,
                            "src": "1298:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          ],
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1290:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1290:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 59,
                      "name": "_removeMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1664,
                      "src": "1276:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1276:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1276:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1325:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 65,
                      "name": "_addMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1648,
                      "src": "1314:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 28,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3321,
                  "src": "974:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "974:11:0"
              }
            ],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "_steward",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "891:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "909:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "929:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "951:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "890:76:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "986:0:0"
            },
            "scope": 92,
            "src": "876:463:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "1436:91:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "1454:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "steward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1465:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1454:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 84,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "1502:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 85,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "1511:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 82,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2492,
                              "src": "1476:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2492_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_isApprovedOrOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2272,
                            "src": "1476:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) view returns (bool)"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1476:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1454:65:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 88,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1453:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 78,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "1446:74:0"
                }
              ]
            },
            "documentation": null,
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1373:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1390:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1372:34:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1430:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1429:6:0"
            },
            "scope": 92,
            "src": "1345:182:0",
            "stateMutability": "view",
            "superFunction": 2272,
            "visibility": "internal"
          }
        ],
        "scope": 93,
        "src": "730:799:0"
      }
    ],
    "src": "0:1530:0"
  },
  "legacyAST": {
    "absolutePath": "/home/jasoons/Documents/clean-code/contracts/contracts/ERC721Patronage_v0.sol",
    "exportedSymbols": {
      "ERC721Patronage_v0": [
        92
      ]
    },
    "id": 93,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 2493,
        "src": "25:84:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 2856,
        "src": "110:94:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 3011,
        "src": "205:92:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 3081,
        "src": "298:100:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3340,
              "src": "761:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3340",
                "typeString": "contract Initializable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "761:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2492,
              "src": "776:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2492",
                "typeString": "contract ERC721"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "776:6:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2855,
              "src": "784:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$2855",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "784:16:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3010,
              "src": "802:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$3010",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "802:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3080,
              "src": "818:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$3080",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "818:22:0"
          }
        ],
        "contractDependencies": [
          1452,
          1669,
          1778,
          1788,
          2492,
          2855,
          3010,
          3080,
          3186,
          3216,
          3242,
          3340
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 92,
        "linearizedBaseContracts": [
          92,
          3080,
          1669,
          3010,
          3242,
          2855,
          3216,
          2492,
          3186,
          1778,
          1788,
          1452,
          3340
        ],
        "name": "ERC721Patronage_v0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 17,
            "name": "steward",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "847:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "847:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "986:353:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "steward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "996:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 31,
                      "name": "_steward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1006:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "996:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "996:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2492,
                        "src": "1024:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2492_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1982,
                      "src": "1024:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1024:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2855,
                        "src": "1053:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$2855_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2544,
                      "src": "1053:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1118:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1124:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 44,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3010,
                        "src": "1092:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$3010_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2911,
                      "src": "1092:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 55,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3403,
                            "src": "1260:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          ],
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1252:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1252:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "ERC721MetadataMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3080,
                        "src": "1218:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$3080_$",
                          "typeString": "type(contract ERC721MetadataMintable)"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3049,
                      "src": "1218:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1218:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3403,
                            "src": "1298:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721Patronage_v0_$92",
                              "typeString": "contract ERC721Patronage_v0"
                            }
                          ],
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1290:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1290:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 59,
                      "name": "_removeMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1664,
                      "src": "1276:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1276:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1276:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1325:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 65,
                      "name": "_addMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1648,
                      "src": "1314:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 28,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3321,
                  "src": "974:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "974:11:0"
              }
            ],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "_steward",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "891:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "909:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "929:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "951:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "890:76:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "986:0:0"
            },
            "scope": 92,
            "src": "876:463:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "1436:91:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "1454:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "steward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1465:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1454:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 84,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "1502:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 85,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "1511:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 82,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2492,
                              "src": "1476:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2492_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_isApprovedOrOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2272,
                            "src": "1476:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) view returns (bool)"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1476:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1454:65:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 88,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1453:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 78,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "1446:74:0"
                }
              ]
            },
            "documentation": null,
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1373:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1390:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1372:34:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1430:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1429:6:0"
            },
            "scope": 92,
            "src": "1345:182:0",
            "stateMutability": "view",
            "superFunction": 2272,
            "visibility": "internal"
          }
        ],
        "scope": 93,
        "src": "730:799:0"
      }
    ],
    "src": "0:1530:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {
    "5": {
      "links": {},
      "events": {
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        }
      },
      "address": "0xaCa690981F448A03C1DC442FF95A8Ac8332C815E",
      "updated_at": 1570573466832
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-08T22:26:10.658Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize()": {
        "details": "Constructor function"
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mintWithTokenURI(address,uint256,string)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}